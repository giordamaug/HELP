2024-05-21 09:06:17,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:06:17,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:06:17,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:06:17,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:07:28,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:07:28,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:07:28,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:07:28,659:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:12:51,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:12:51,883:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:12:51,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:12:51,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:13:22,099:INFO:PyCaret ClassificationExperiment
2024-05-21 09:13:22,099:INFO:Logging name: clf-default-name
2024-05-21 09:13:22,099:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-21 09:13:22,099:INFO:version 3.3.2
2024-05-21 09:13:22,099:INFO:Initializing setup()
2024-05-21 09:13:22,099:INFO:self.USI: c1c9
2024-05-21 09:13:22,099:INFO:self._variable_keys: {'log_plots_param', 'fold_shuffle_param', 'n_jobs_param', 'exp_id', 'fold_groups_param', 'is_multiclass', 'USI', 'fold_generator', 'idx', 'y_test', 'X_test', 'X', 'html_param', '_ml_usecase', 'gpu_param', 'memory', 'seed', 'y_train', 'X_train', 'logging_param', 'target_param', 'fix_imbalance', 'exp_name_log', 'pipeline', '_available_plots', 'y', 'data', 'gpu_n_jobs_param'}
2024-05-21 09:13:22,099:INFO:Checking environment
2024-05-21 09:13:22,099:INFO:python_version: 3.10.13
2024-05-21 09:13:22,099:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-21 09:13:22,099:INFO:machine: arm64
2024-05-21 09:13:22,099:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-21 09:13:22,099:INFO:Memory: svmem(total=17179869184, available=8327020544, percent=51.5, used=7724564480, free=2276245504, active=6036111360, inactive=6044991488, wired=1688453120)
2024-05-21 09:13:22,099:INFO:Physical Core: 8
2024-05-21 09:13:22,099:INFO:Logical Core: 8
2024-05-21 09:13:22,099:INFO:Checking libraries
2024-05-21 09:13:22,100:INFO:System:
2024-05-21 09:13:22,100:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-21 09:13:22,100:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-21 09:13:22,100:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-21 09:13:22,100:INFO:PyCaret required dependencies:
2024-05-21 09:13:22,101:INFO:                 pip: 23.3.2
2024-05-21 09:13:22,101:INFO:          setuptools: 69.0.3
2024-05-21 09:13:22,101:INFO:             pycaret: 3.3.2
2024-05-21 09:13:22,101:INFO:             IPython: 8.20.0
2024-05-21 09:13:22,101:INFO:          ipywidgets: 8.1.1
2024-05-21 09:13:22,101:INFO:                tqdm: 4.66.1
2024-05-21 09:13:22,101:INFO:               numpy: 1.22.3
2024-05-21 09:13:22,101:INFO:              pandas: 1.3.5
2024-05-21 09:13:22,101:INFO:              jinja2: 3.1.3
2024-05-21 09:13:22,101:INFO:               scipy: 1.11.4
2024-05-21 09:13:22,101:INFO:              joblib: 1.3.2
2024-05-21 09:13:22,101:INFO:             sklearn: 1.4.2
2024-05-21 09:13:22,101:INFO:                pyod: 1.1.3
2024-05-21 09:13:22,101:INFO:            imblearn: 0.12.2
2024-05-21 09:13:22,101:INFO:   category_encoders: 2.6.3
2024-05-21 09:13:22,101:INFO:            lightgbm: 3.3.5
2024-05-21 09:13:22,102:INFO:               numba: 0.59.1
2024-05-21 09:13:22,102:INFO:            requests: 2.31.0
2024-05-21 09:13:22,102:INFO:          matplotlib: 3.7.5
2024-05-21 09:13:22,102:INFO:          scikitplot: 0.3.7
2024-05-21 09:13:22,102:INFO:         yellowbrick: 1.5
2024-05-21 09:13:22,102:INFO:              plotly: 5.18.0
2024-05-21 09:13:22,102:INFO:    plotly-resampler: Not installed
2024-05-21 09:13:22,102:INFO:             kaleido: 0.2.1
2024-05-21 09:13:22,102:INFO:           schemdraw: 0.15
2024-05-21 09:13:22,102:INFO:         statsmodels: 0.14.1
2024-05-21 09:13:22,102:INFO:              sktime: 0.26.0
2024-05-21 09:13:22,102:INFO:               tbats: 1.1.3
2024-05-21 09:13:22,102:INFO:            pmdarima: 2.0.4
2024-05-21 09:13:22,102:INFO:              psutil: 5.9.4
2024-05-21 09:13:22,102:INFO:          markupsafe: 2.1.3
2024-05-21 09:13:22,102:INFO:             pickle5: Not installed
2024-05-21 09:13:22,102:INFO:         cloudpickle: 2.2.1
2024-05-21 09:13:22,102:INFO:         deprecation: 2.1.0
2024-05-21 09:13:22,102:INFO:              xxhash: 3.4.1
2024-05-21 09:13:22,102:INFO:           wurlitzer: 3.1.0
2024-05-21 09:13:22,102:INFO:PyCaret optional dependencies:
2024-05-21 09:13:22,112:INFO:                shap: Not installed
2024-05-21 09:13:22,112:INFO:           interpret: Not installed
2024-05-21 09:13:22,112:INFO:                umap: Not installed
2024-05-21 09:13:22,112:INFO:     ydata_profiling: Not installed
2024-05-21 09:13:22,112:INFO:  explainerdashboard: Not installed
2024-05-21 09:13:22,112:INFO:             autoviz: Not installed
2024-05-21 09:13:22,112:INFO:           fairlearn: Not installed
2024-05-21 09:13:22,112:INFO:          deepchecks: Not installed
2024-05-21 09:13:22,112:INFO:             xgboost: 1.7.1
2024-05-21 09:13:22,112:INFO:            catboost: Not installed
2024-05-21 09:13:22,112:INFO:              kmodes: Not installed
2024-05-21 09:13:22,112:INFO:             mlxtend: Not installed
2024-05-21 09:13:22,112:INFO:       statsforecast: Not installed
2024-05-21 09:13:22,112:INFO:        tune_sklearn: Not installed
2024-05-21 09:13:22,112:INFO:                 ray: Not installed
2024-05-21 09:13:22,112:INFO:            hyperopt: Not installed
2024-05-21 09:13:22,112:INFO:              optuna: Not installed
2024-05-21 09:13:22,112:INFO:               skopt: Not installed
2024-05-21 09:13:22,112:INFO:              mlflow: Not installed
2024-05-21 09:13:22,112:INFO:              gradio: Not installed
2024-05-21 09:13:22,112:INFO:             fastapi: Not installed
2024-05-21 09:13:22,112:INFO:             uvicorn: Not installed
2024-05-21 09:13:22,112:INFO:              m2cgen: Not installed
2024-05-21 09:13:22,112:INFO:           evidently: Not installed
2024-05-21 09:13:22,112:INFO:               fugue: Not installed
2024-05-21 09:13:22,112:INFO:           streamlit: Not installed
2024-05-21 09:13:22,112:INFO:             prophet: Not installed
2024-05-21 09:13:22,112:INFO:None
2024-05-21 09:13:22,112:INFO:Set up data.
2024-05-21 09:13:22,651:INFO:Set up folding strategy.
2024-05-21 09:13:22,651:INFO:Set up train/test split.
2024-05-21 09:13:23,271:INFO:Set up index.
2024-05-21 09:13:23,297:INFO:Assigning column types.
2024-05-21 09:13:23,958:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 09:13:23,975:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 09:13:23,978:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:13:23,991:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:13:24,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:13:24,524:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 09:13:24,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:13:24,535:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:13:24,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:13:24,536:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 09:13:24,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:13:24,564:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:13:24,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:13:24,582:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:13:24,593:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:13:24,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:13:24,594:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-21 09:13:24,621:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:13:24,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:13:24,650:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:13:24,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:13:24,652:INFO:Preparing preprocessing pipeline...
2024-05-21 09:13:24,726:INFO:Set up simple imputation.
2024-05-21 09:13:24,797:INFO:Set up column name cleaning.
2024-05-21 09:13:27,086:INFO:Finished creating preprocessing pipeline.
2024-05-21 09:13:27,101:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-21 09:13:27,101:INFO:Creating final display dataframe.
2024-05-21 09:13:31,601:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape     (12927, 3460)
4        Transformed data shape     (12927, 3460)
5   Transformed train set shape      (9048, 3460)
6    Transformed test set shape      (3879, 3460)
7              Numeric features              3459
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c1c9
2024-05-21 09:13:31,635:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:13:31,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:13:31,665:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:13:31,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:13:31,667:INFO:setup() successfully completed in 9.57s...............
2024-05-21 09:16:18,900:INFO:Initializing load_model()
2024-05-21 09:16:18,900:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 09:16:18,902:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.0.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:16:18,915:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator DecisionTreeClassifier from version 1.0.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:20:09,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:20:09,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:20:09,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:20:09,967:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:20:24,420:INFO:PyCaret ClassificationExperiment
2024-05-21 09:20:24,420:INFO:Logging name: clf-default-name
2024-05-21 09:20:24,420:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-21 09:20:24,420:INFO:version 3.2.0
2024-05-21 09:20:24,420:INFO:Initializing setup()
2024-05-21 09:20:24,420:INFO:self.USI: cfac
2024-05-21 09:20:24,420:INFO:self._variable_keys: {'fold_generator', 'X_train', 'fix_imbalance', 'USI', 'target_param', 'exp_id', '_available_plots', 'n_jobs_param', 'X', 'pipeline', 'y', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'is_multiclass', 'gpu_param', 'data', 'exp_name_log', '_ml_usecase', 'seed', 'memory', 'logging_param', 'y_test', 'log_plots_param', 'X_test', 'idx', 'html_param', 'fold_shuffle_param'}
2024-05-21 09:20:24,420:INFO:Checking environment
2024-05-21 09:20:24,420:INFO:python_version: 3.10.13
2024-05-21 09:20:24,420:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-21 09:20:24,420:INFO:machine: arm64
2024-05-21 09:20:24,420:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-21 09:20:24,420:INFO:Memory: svmem(total=17179869184, available=7704281088, percent=55.2, used=8400568320, free=1023918080, active=6685229056, inactive=6509412352, wired=1715339264)
2024-05-21 09:20:24,420:INFO:Physical Core: 8
2024-05-21 09:20:24,420:INFO:Logical Core: 8
2024-05-21 09:20:24,420:INFO:Checking libraries
2024-05-21 09:20:24,420:INFO:System:
2024-05-21 09:20:24,420:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-21 09:20:24,420:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-21 09:20:24,420:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-21 09:20:24,420:INFO:PyCaret required dependencies:
2024-05-21 09:20:24,422:INFO:                 pip: 23.3.2
2024-05-21 09:20:24,422:INFO:          setuptools: 69.0.3
2024-05-21 09:20:24,422:INFO:             pycaret: 3.2.0
2024-05-21 09:20:24,422:INFO:             IPython: 8.20.0
2024-05-21 09:20:24,422:INFO:          ipywidgets: 8.1.1
2024-05-21 09:20:24,422:INFO:                tqdm: 4.66.1
2024-05-21 09:20:24,422:INFO:               numpy: 1.22.3
2024-05-21 09:20:24,422:INFO:              pandas: 1.3.5
2024-05-21 09:20:24,422:INFO:              jinja2: 3.1.3
2024-05-21 09:20:24,422:INFO:               scipy: 1.10.1
2024-05-21 09:20:24,422:INFO:              joblib: 1.3.2
2024-05-21 09:20:24,422:INFO:             sklearn: 1.2.2
2024-05-21 09:20:24,422:INFO:                pyod: 1.1.3
2024-05-21 09:20:24,422:INFO:            imblearn: 0.12.2
2024-05-21 09:20:24,422:INFO:   category_encoders: 2.6.3
2024-05-21 09:20:24,422:INFO:            lightgbm: 3.3.5
2024-05-21 09:20:24,422:INFO:               numba: 0.59.1
2024-05-21 09:20:24,422:INFO:            requests: 2.31.0
2024-05-21 09:20:24,422:INFO:          matplotlib: 3.6.0
2024-05-21 09:20:24,422:INFO:          scikitplot: 0.3.7
2024-05-21 09:20:24,422:INFO:         yellowbrick: 1.5
2024-05-21 09:20:24,422:INFO:              plotly: 5.18.0
2024-05-21 09:20:24,422:INFO:    plotly-resampler: Not installed
2024-05-21 09:20:24,422:INFO:             kaleido: 0.2.1
2024-05-21 09:20:24,422:INFO:           schemdraw: 0.15
2024-05-21 09:20:24,422:INFO:         statsmodels: 0.14.1
2024-05-21 09:20:24,422:INFO:              sktime: 0.21.1
2024-05-21 09:20:24,422:INFO:               tbats: 1.1.3
2024-05-21 09:20:24,422:INFO:            pmdarima: 2.0.4
2024-05-21 09:20:24,422:INFO:              psutil: 5.9.4
2024-05-21 09:20:24,422:INFO:          markupsafe: 2.1.3
2024-05-21 09:20:24,422:INFO:             pickle5: Not installed
2024-05-21 09:20:24,422:INFO:         cloudpickle: 2.2.1
2024-05-21 09:20:24,422:INFO:         deprecation: 2.1.0
2024-05-21 09:20:24,422:INFO:              xxhash: 3.4.1
2024-05-21 09:20:24,422:INFO:           wurlitzer: 3.1.0
2024-05-21 09:20:24,422:INFO:PyCaret optional dependencies:
2024-05-21 09:20:24,429:INFO:                shap: Not installed
2024-05-21 09:20:24,429:INFO:           interpret: Not installed
2024-05-21 09:20:24,429:INFO:                umap: Not installed
2024-05-21 09:20:24,429:INFO:     ydata_profiling: Not installed
2024-05-21 09:20:24,429:INFO:  explainerdashboard: Not installed
2024-05-21 09:20:24,429:INFO:             autoviz: Not installed
2024-05-21 09:20:24,429:INFO:           fairlearn: Not installed
2024-05-21 09:20:24,429:INFO:          deepchecks: Not installed
2024-05-21 09:20:24,429:INFO:             xgboost: 1.7.1
2024-05-21 09:20:24,429:INFO:            catboost: Not installed
2024-05-21 09:20:24,429:INFO:              kmodes: Not installed
2024-05-21 09:20:24,429:INFO:             mlxtend: Not installed
2024-05-21 09:20:24,429:INFO:       statsforecast: Not installed
2024-05-21 09:20:24,429:INFO:        tune_sklearn: Not installed
2024-05-21 09:20:24,429:INFO:                 ray: Not installed
2024-05-21 09:20:24,429:INFO:            hyperopt: Not installed
2024-05-21 09:20:24,429:INFO:              optuna: Not installed
2024-05-21 09:20:24,429:INFO:               skopt: Not installed
2024-05-21 09:20:24,429:INFO:              mlflow: Not installed
2024-05-21 09:20:24,429:INFO:              gradio: Not installed
2024-05-21 09:20:24,429:INFO:             fastapi: Not installed
2024-05-21 09:20:24,429:INFO:             uvicorn: Not installed
2024-05-21 09:20:24,429:INFO:              m2cgen: Not installed
2024-05-21 09:20:24,429:INFO:           evidently: Not installed
2024-05-21 09:20:24,429:INFO:               fugue: Not installed
2024-05-21 09:20:24,429:INFO:           streamlit: Not installed
2024-05-21 09:20:24,429:INFO:             prophet: Not installed
2024-05-21 09:20:24,429:INFO:None
2024-05-21 09:20:24,429:INFO:Set up data.
2024-05-21 09:20:24,973:INFO:Set up folding strategy.
2024-05-21 09:20:24,974:INFO:Set up train/test split.
2024-05-21 09:20:25,609:INFO:Set up index.
2024-05-21 09:20:25,628:INFO:Assigning column types.
2024-05-21 09:20:26,241:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 09:20:26,258:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 09:20:26,260:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:20:26,273:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:20:26,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:20:26,715:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 09:20:26,715:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:20:26,725:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:20:26,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:20:26,726:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 09:20:26,743:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:20:26,754:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:20:26,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:20:26,772:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:20:26,783:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:20:26,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:20:26,784:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-21 09:20:26,811:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:20:26,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:20:26,841:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:20:26,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:20:26,842:INFO:Preparing preprocessing pipeline...
2024-05-21 09:20:26,918:INFO:Set up simple imputation.
2024-05-21 09:20:26,988:INFO:Set up column name cleaning.
2024-05-21 09:20:28,968:INFO:Finished creating preprocessing pipeline.
2024-05-21 09:20:28,983:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-21 09:20:28,985:INFO:Creating final display dataframe.
2024-05-21 09:20:33,732:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape     (12927, 3460)
4        Transformed data shape     (12927, 3460)
5   Transformed train set shape      (9048, 3460)
6    Transformed test set shape      (3879, 3460)
7              Numeric features              3459
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              cfac
2024-05-21 09:20:33,765:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:20:33,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:20:33,799:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:20:33,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:20:33,800:INFO:setup() successfully completed in 9.38s...............
2024-05-21 09:20:45,387:INFO:Initializing load_model()
2024-05-21 09:20:45,388:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 09:20:45,390:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:20:45,408:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator DecisionTreeClassifier from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:20:45,425:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator RandomForestClassifier from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:20:45,427:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.22.3', 'pandas': '1.3.5', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.5', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.4', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '20.3.3', 'setuptools': '69.0.3', 'pycaret': '3.2.0', 'IPython': '7.19.0', 'ipywidgets': '8.1.2', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.2', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '1.6.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '2.0.1'}, 'python': {'version': '3.8.3', 'machine': 'x86_64'}}
  warnings.warn(

2024-05-21 09:20:52,828:INFO:Initializing load_model()
2024-05-21 09:20:52,828:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 09:20:52,829:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:20:52,842:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator DecisionTreeClassifier from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:20:52,857:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator RandomForestClassifier from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:20:52,859:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.2.0', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.22.3', 'pandas': '1.3.5', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.5', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.4', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '20.3.3', 'setuptools': '69.0.3', 'pycaret': '3.2.0', 'IPython': '7.19.0', 'ipywidgets': '8.1.2', 'tqdm': '4.64.0', 'numpy': '1.22.4', 'pandas': '1.3.5', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.2', 'numba': '0.58.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '1.6.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '2.0.1'}, 'python': {'version': '3.8.3', 'machine': 'x86_64'}}
  warnings.warn(

2024-05-21 09:21:08,682:INFO:Initializing load_model()
2024-05-21 09:21:08,682:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 09:21:16,226:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator RandomizedSearchCV from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:21:16,227:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator AdaBoostClassifier from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:21:16,228:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator LinearDiscriminantAnalysis from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:21:16,229:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:21:16,230:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator ExtraTreeClassifier from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:21:16,230:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator ExtraTreesClassifier from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:21:16,231:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:318: UserWarning: Trying to unpickle estimator SGDClassifier from version 1.0.2 when using version 1.2.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:31:30,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:31:30,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:31:30,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:31:30,753:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:31:53,737:INFO:Initializing load_model()
2024-05-21 09:31:53,737:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 09:31:53,740:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.0.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:31:53,756:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator DecisionTreeClassifier from version 1.0.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:32:52,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:32:52,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:32:52,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:32:52,918:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:33:04,233:INFO:PyCaret ClassificationExperiment
2024-05-21 09:33:04,233:INFO:Logging name: clf-default-name
2024-05-21 09:33:04,233:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-21 09:33:04,233:INFO:version 3.3.2
2024-05-21 09:33:04,233:INFO:Initializing setup()
2024-05-21 09:33:04,233:INFO:self.USI: 78f6
2024-05-21 09:33:04,233:INFO:self._variable_keys: {'idx', 'pipeline', 'X_test', 'memory', 'logging_param', 'exp_id', 'y', 'fold_generator', 'exp_name_log', 'gpu_param', 'html_param', 'X', 'n_jobs_param', 'data', 'gpu_n_jobs_param', 'log_plots_param', 'X_train', 'fold_shuffle_param', 'is_multiclass', 'fold_groups_param', 'target_param', 'USI', 'fix_imbalance', '_available_plots', 'y_train', 'y_test', '_ml_usecase', 'seed'}
2024-05-21 09:33:04,234:INFO:Checking environment
2024-05-21 09:33:04,234:INFO:python_version: 3.10.13
2024-05-21 09:33:04,234:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-21 09:33:04,234:INFO:machine: arm64
2024-05-21 09:33:04,234:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-21 09:33:04,234:INFO:Memory: svmem(total=17179869184, available=7634911232, percent=55.6, used=8347598848, free=993050624, active=6678937600, inactive=6637223936, wired=1668661248)
2024-05-21 09:33:04,234:INFO:Physical Core: 8
2024-05-21 09:33:04,234:INFO:Logical Core: 8
2024-05-21 09:33:04,234:INFO:Checking libraries
2024-05-21 09:33:04,234:INFO:System:
2024-05-21 09:33:04,234:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-21 09:33:04,234:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-21 09:33:04,234:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-21 09:33:04,234:INFO:PyCaret required dependencies:
2024-05-21 09:33:04,236:INFO:                 pip: 23.3.2
2024-05-21 09:33:04,236:INFO:          setuptools: 69.0.3
2024-05-21 09:33:04,236:INFO:             pycaret: 3.3.2
2024-05-21 09:33:04,236:INFO:             IPython: 8.20.0
2024-05-21 09:33:04,236:INFO:          ipywidgets: 8.1.1
2024-05-21 09:33:04,236:INFO:                tqdm: 4.66.1
2024-05-21 09:33:04,236:INFO:               numpy: 1.26.4
2024-05-21 09:33:04,236:INFO:              pandas: 2.1.3
2024-05-21 09:33:04,236:INFO:              jinja2: 3.1.3
2024-05-21 09:33:04,236:INFO:               scipy: 1.10.1
2024-05-21 09:33:04,236:INFO:              joblib: 1.3.2
2024-05-21 09:33:04,236:INFO:             sklearn: 1.4.2
2024-05-21 09:33:04,236:INFO:                pyod: 1.1.3
2024-05-21 09:33:04,236:INFO:            imblearn: 0.12.2
2024-05-21 09:33:04,236:INFO:   category_encoders: 2.6.3
2024-05-21 09:33:04,236:INFO:            lightgbm: 3.3.5
2024-05-21 09:33:04,236:INFO:               numba: 0.59.1
2024-05-21 09:33:04,236:INFO:            requests: 2.31.0
2024-05-21 09:33:04,236:INFO:          matplotlib: 3.6.0
2024-05-21 09:33:04,236:INFO:          scikitplot: 0.3.7
2024-05-21 09:33:04,236:INFO:         yellowbrick: 1.5
2024-05-21 09:33:04,236:INFO:              plotly: 5.18.0
2024-05-21 09:33:04,236:INFO:    plotly-resampler: Not installed
2024-05-21 09:33:04,237:INFO:             kaleido: 0.2.1
2024-05-21 09:33:04,237:INFO:           schemdraw: 0.15
2024-05-21 09:33:04,237:INFO:         statsmodels: 0.14.1
2024-05-21 09:33:04,237:INFO:              sktime: 0.26.0
2024-05-21 09:33:04,237:INFO:               tbats: 1.1.3
2024-05-21 09:33:04,237:INFO:            pmdarima: 2.0.4
2024-05-21 09:33:04,237:INFO:              psutil: 5.9.4
2024-05-21 09:33:04,237:INFO:          markupsafe: 2.1.3
2024-05-21 09:33:04,237:INFO:             pickle5: Not installed
2024-05-21 09:33:04,237:INFO:         cloudpickle: 2.2.1
2024-05-21 09:33:04,237:INFO:         deprecation: 2.1.0
2024-05-21 09:33:04,237:INFO:              xxhash: 3.4.1
2024-05-21 09:33:04,237:INFO:           wurlitzer: 3.1.0
2024-05-21 09:33:04,237:INFO:PyCaret optional dependencies:
2024-05-21 09:33:04,246:INFO:                shap: Not installed
2024-05-21 09:33:04,246:INFO:           interpret: Not installed
2024-05-21 09:33:04,247:INFO:                umap: Not installed
2024-05-21 09:33:04,247:INFO:     ydata_profiling: Not installed
2024-05-21 09:33:04,247:INFO:  explainerdashboard: Not installed
2024-05-21 09:33:04,247:INFO:             autoviz: Not installed
2024-05-21 09:33:04,247:INFO:           fairlearn: Not installed
2024-05-21 09:33:04,247:INFO:          deepchecks: Not installed
2024-05-21 09:33:04,247:INFO:             xgboost: 1.7.1
2024-05-21 09:33:04,247:INFO:            catboost: Not installed
2024-05-21 09:33:04,247:INFO:              kmodes: Not installed
2024-05-21 09:33:04,247:INFO:             mlxtend: Not installed
2024-05-21 09:33:04,247:INFO:       statsforecast: Not installed
2024-05-21 09:33:04,247:INFO:        tune_sklearn: Not installed
2024-05-21 09:33:04,247:INFO:                 ray: Not installed
2024-05-21 09:33:04,247:INFO:            hyperopt: Not installed
2024-05-21 09:33:04,247:INFO:              optuna: Not installed
2024-05-21 09:33:04,247:INFO:               skopt: Not installed
2024-05-21 09:33:04,247:INFO:              mlflow: Not installed
2024-05-21 09:33:04,247:INFO:              gradio: Not installed
2024-05-21 09:33:04,247:INFO:             fastapi: Not installed
2024-05-21 09:33:04,247:INFO:             uvicorn: Not installed
2024-05-21 09:33:04,247:INFO:              m2cgen: Not installed
2024-05-21 09:33:04,247:INFO:           evidently: Not installed
2024-05-21 09:33:04,247:INFO:               fugue: Not installed
2024-05-21 09:33:04,247:INFO:           streamlit: Not installed
2024-05-21 09:33:04,247:INFO:             prophet: Not installed
2024-05-21 09:33:04,247:INFO:None
2024-05-21 09:33:04,247:INFO:Set up data.
2024-05-21 09:33:04,826:INFO:Set up folding strategy.
2024-05-21 09:33:04,826:INFO:Set up train/test split.
2024-05-21 09:33:05,485:INFO:Set up index.
2024-05-21 09:33:05,510:INFO:Assigning column types.
2024-05-21 09:33:06,152:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 09:33:06,171:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 09:33:06,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:33:06,188:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:33:06,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:33:06,580:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 09:33:06,581:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:33:06,592:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:33:06,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:33:06,593:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 09:33:06,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:33:06,620:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:33:06,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:33:06,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 09:33:06,649:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:33:06,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:33:06,650:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-21 09:33:06,678:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:33:06,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:33:06,706:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:33:06,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:33:06,708:INFO:Preparing preprocessing pipeline...
2024-05-21 09:33:06,787:INFO:Set up simple imputation.
2024-05-21 09:33:06,862:INFO:Set up column name cleaning.
2024-05-21 09:33:08,504:INFO:Finished creating preprocessing pipeline.
2024-05-21 09:33:08,517:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-21 09:33:08,517:INFO:Creating final display dataframe.
2024-05-21 09:33:13,402:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape     (12927, 3460)
4        Transformed data shape     (12927, 3460)
5   Transformed train set shape      (9048, 3460)
6    Transformed test set shape      (3879, 3460)
7              Numeric features              3459
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              78f6
2024-05-21 09:33:13,435:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:33:13,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:33:13,465:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 09:33:13,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 09:33:13,467:INFO:setup() successfully completed in 9.24s...............
2024-05-21 09:33:26,111:INFO:Initializing load_model()
2024-05-21 09:33:26,111:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 09:33:26,114:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SimpleImputer from version 1.0.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:33:26,132:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator DecisionTreeClassifier from version 1.0.2 when using version 1.4.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(

2024-05-21 09:48:16,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:48:16,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:48:16,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:48:16,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 09:48:45,173:INFO:Initializing load_model()
2024-05-21 09:48:45,173:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 09:48:45,524:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.26.4', 'pandas': '2.1.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.5', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.4', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.8.0', 'pycaret': '3.3.2', 'IPython': '8.12.0', 'ipywidgets': '8.0.4', 'tqdm': '4.64.1', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.3', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.2.1', 'numba': '0.58.1', 'requests': '2.29.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2024-05-21 09:48:51,432:INFO:Initializing load_model()
2024-05-21 09:48:51,432:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:34:40,100:INFO:Initializing load_model()
2024-05-21 10:34:40,101:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:34:40,122:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.26.4', 'pandas': '2.1.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.5', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.4', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.8.0', 'pycaret': '3.3.2', 'IPython': '8.12.0', 'ipywidgets': '8.0.4', 'tqdm': '4.64.1', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.3', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.2.1', 'numba': '0.58.1', 'requests': '2.29.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2024-05-21 10:34:40,122:INFO:Initializing load_model()
2024-05-21 10:34:40,122:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:34:40,139:INFO:Initializing load_model()
2024-05-21 10:34:40,139:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:34:40,154:INFO:Initializing load_model()
2024-05-21 10:34:40,154:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:34:40,168:INFO:Initializing load_model()
2024-05-21 10:34:40,168:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:34:40,181:INFO:Initializing load_model()
2024-05-21 10:34:40,181:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:34:40,195:INFO:Initializing load_model()
2024-05-21 10:34:40,195:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:34:40,208:INFO:Initializing load_model()
2024-05-21 10:34:40,208:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:02,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 10:35:02,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 10:35:02,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 10:35:02,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 10:35:17,207:INFO:PyCaret ClassificationExperiment
2024-05-21 10:35:17,208:INFO:Logging name: clf-default-name
2024-05-21 10:35:17,208:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-21 10:35:17,208:INFO:version 3.3.2
2024-05-21 10:35:17,208:INFO:Initializing setup()
2024-05-21 10:35:17,208:INFO:self.USI: d3d2
2024-05-21 10:35:17,208:INFO:self._variable_keys: {'y', 'exp_name_log', 'idx', 'fix_imbalance', 'gpu_param', 'target_param', 'memory', 'y_test', 'fold_shuffle_param', 'y_train', 'log_plots_param', 'logging_param', 'data', 'is_multiclass', 'seed', '_ml_usecase', 'fold_generator', 'exp_id', 'USI', '_available_plots', 'X_test', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'X', 'pipeline', 'html_param', 'fold_groups_param'}
2024-05-21 10:35:17,208:INFO:Checking environment
2024-05-21 10:35:17,208:INFO:python_version: 3.10.13
2024-05-21 10:35:17,208:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-21 10:35:17,208:INFO:machine: arm64
2024-05-21 10:35:17,208:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-21 10:35:17,208:INFO:Memory: svmem(total=17179869184, available=6644596736, percent=61.3, used=8232288256, free=269434880, active=6379864064, inactive=6348210176, wired=1852424192)
2024-05-21 10:35:17,208:INFO:Physical Core: 8
2024-05-21 10:35:17,208:INFO:Logical Core: 8
2024-05-21 10:35:17,208:INFO:Checking libraries
2024-05-21 10:35:17,208:INFO:System:
2024-05-21 10:35:17,209:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-21 10:35:17,209:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-21 10:35:17,209:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-21 10:35:17,209:INFO:PyCaret required dependencies:
2024-05-21 10:35:17,210:INFO:                 pip: 23.3.2
2024-05-21 10:35:17,210:INFO:          setuptools: 69.0.3
2024-05-21 10:35:17,210:INFO:             pycaret: 3.3.2
2024-05-21 10:35:17,210:INFO:             IPython: 8.20.0
2024-05-21 10:35:17,210:INFO:          ipywidgets: 8.1.1
2024-05-21 10:35:17,210:INFO:                tqdm: 4.66.1
2024-05-21 10:35:17,210:INFO:               numpy: 1.26.4
2024-05-21 10:35:17,210:INFO:              pandas: 2.1.3
2024-05-21 10:35:17,210:INFO:              jinja2: 3.1.3
2024-05-21 10:35:17,210:INFO:               scipy: 1.10.1
2024-05-21 10:35:17,210:INFO:              joblib: 1.3.2
2024-05-21 10:35:17,210:INFO:             sklearn: 1.4.2
2024-05-21 10:35:17,211:INFO:                pyod: 1.1.3
2024-05-21 10:35:17,211:INFO:            imblearn: 0.12.2
2024-05-21 10:35:17,211:INFO:   category_encoders: 2.6.3
2024-05-21 10:35:17,211:INFO:            lightgbm: 3.3.5
2024-05-21 10:35:17,211:INFO:               numba: 0.59.1
2024-05-21 10:35:17,211:INFO:            requests: 2.31.0
2024-05-21 10:35:17,211:INFO:          matplotlib: 3.6.0
2024-05-21 10:35:17,211:INFO:          scikitplot: 0.3.7
2024-05-21 10:35:17,211:INFO:         yellowbrick: 1.5
2024-05-21 10:35:17,211:INFO:              plotly: 5.18.0
2024-05-21 10:35:17,211:INFO:    plotly-resampler: Not installed
2024-05-21 10:35:17,211:INFO:             kaleido: 0.2.1
2024-05-21 10:35:17,211:INFO:           schemdraw: 0.15
2024-05-21 10:35:17,211:INFO:         statsmodels: 0.14.1
2024-05-21 10:35:17,211:INFO:              sktime: 0.26.0
2024-05-21 10:35:17,211:INFO:               tbats: 1.1.3
2024-05-21 10:35:17,211:INFO:            pmdarima: 2.0.4
2024-05-21 10:35:17,211:INFO:              psutil: 5.9.4
2024-05-21 10:35:17,211:INFO:          markupsafe: 2.1.3
2024-05-21 10:35:17,211:INFO:             pickle5: Not installed
2024-05-21 10:35:17,211:INFO:         cloudpickle: 2.2.1
2024-05-21 10:35:17,211:INFO:         deprecation: 2.1.0
2024-05-21 10:35:17,211:INFO:              xxhash: 3.4.1
2024-05-21 10:35:17,211:INFO:           wurlitzer: 3.1.0
2024-05-21 10:35:17,211:INFO:PyCaret optional dependencies:
2024-05-21 10:35:17,220:INFO:                shap: Not installed
2024-05-21 10:35:17,220:INFO:           interpret: Not installed
2024-05-21 10:35:17,220:INFO:                umap: Not installed
2024-05-21 10:35:17,220:INFO:     ydata_profiling: Not installed
2024-05-21 10:35:17,220:INFO:  explainerdashboard: Not installed
2024-05-21 10:35:17,220:INFO:             autoviz: Not installed
2024-05-21 10:35:17,220:INFO:           fairlearn: Not installed
2024-05-21 10:35:17,220:INFO:          deepchecks: Not installed
2024-05-21 10:35:17,220:INFO:             xgboost: 1.7.1
2024-05-21 10:35:17,220:INFO:            catboost: Not installed
2024-05-21 10:35:17,220:INFO:              kmodes: Not installed
2024-05-21 10:35:17,220:INFO:             mlxtend: Not installed
2024-05-21 10:35:17,220:INFO:       statsforecast: Not installed
2024-05-21 10:35:17,220:INFO:        tune_sklearn: Not installed
2024-05-21 10:35:17,220:INFO:                 ray: Not installed
2024-05-21 10:35:17,220:INFO:            hyperopt: Not installed
2024-05-21 10:35:17,220:INFO:              optuna: Not installed
2024-05-21 10:35:17,220:INFO:               skopt: Not installed
2024-05-21 10:35:17,220:INFO:              mlflow: Not installed
2024-05-21 10:35:17,220:INFO:              gradio: Not installed
2024-05-21 10:35:17,220:INFO:             fastapi: Not installed
2024-05-21 10:35:17,221:INFO:             uvicorn: Not installed
2024-05-21 10:35:17,221:INFO:              m2cgen: Not installed
2024-05-21 10:35:17,221:INFO:           evidently: Not installed
2024-05-21 10:35:17,221:INFO:               fugue: Not installed
2024-05-21 10:35:17,221:INFO:           streamlit: Not installed
2024-05-21 10:35:17,221:INFO:             prophet: Not installed
2024-05-21 10:35:17,221:INFO:None
2024-05-21 10:35:17,221:INFO:Set up data.
2024-05-21 10:35:17,882:INFO:Set up folding strategy.
2024-05-21 10:35:17,883:INFO:Set up train/test split.
2024-05-21 10:35:18,528:INFO:Set up index.
2024-05-21 10:35:18,545:INFO:Assigning column types.
2024-05-21 10:35:19,239:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 10:35:19,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 10:35:19,260:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 10:35:19,274:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 10:35:19,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 10:35:19,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 10:35:19,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 10:35:19,685:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 10:35:19,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 10:35:19,686:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 10:35:19,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 10:35:19,715:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 10:35:19,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 10:35:19,733:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 10:35:19,744:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 10:35:19,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 10:35:19,745:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-21 10:35:19,774:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 10:35:19,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 10:35:19,803:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 10:35:19,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 10:35:19,806:INFO:Preparing preprocessing pipeline...
2024-05-21 10:35:19,888:INFO:Set up simple imputation.
2024-05-21 10:35:19,965:INFO:Set up column name cleaning.
2024-05-21 10:35:21,165:INFO:Finished creating preprocessing pipeline.
2024-05-21 10:35:21,180:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-21 10:35:21,180:INFO:Creating final display dataframe.
2024-05-21 10:35:24,486:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape     (12927, 3460)
4        Transformed data shape     (12927, 3460)
5   Transformed train set shape      (9048, 3460)
6    Transformed test set shape      (3879, 3460)
7              Numeric features              3459
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              d3d2
2024-05-21 10:35:24,520:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 10:35:24,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 10:35:24,550:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 10:35:24,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 10:35:24,552:INFO:setup() successfully completed in 7.35s...............
2024-05-21 10:35:43,604:INFO:Initializing load_model()
2024-05-21 10:35:43,604:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:43,635:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.26.4', 'pandas': '2.1.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.5', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.4', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.8.0', 'pycaret': '3.3.2', 'IPython': '8.12.0', 'ipywidgets': '8.0.4', 'tqdm': '4.64.1', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.3', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.2.1', 'numba': '0.58.1', 'requests': '2.29.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2024-05-21 10:35:43,636:INFO:Initializing load_model()
2024-05-21 10:35:43,636:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:43,654:INFO:Initializing load_model()
2024-05-21 10:35:43,654:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:43,669:INFO:Initializing load_model()
2024-05-21 10:35:43,669:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:43,684:INFO:Initializing load_model()
2024-05-21 10:35:43,684:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:43,699:INFO:Initializing load_model()
2024-05-21 10:35:43,699:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:43,713:INFO:Initializing load_model()
2024-05-21 10:35:43,713:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:43,728:INFO:Initializing load_model()
2024-05-21 10:35:43,728:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:35:43,975:INFO:Initializing compare_models()
2024-05-21 10:35:43,975:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, include=[Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)], fold=None, round=4, cross_validation=True, sort=BA, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, 'include': [Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'BA', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-21 10:35:43,975:INFO:Checking exceptions
2024-05-21 10:35:44,497:INFO:Preparing display monitor
2024-05-21 10:35:44,507:INFO:Initializing custom model Light Gradient Boosting Machine
2024-05-21 10:35:44,507:INFO:Total runtime is 6.115436553955078e-06 minutes
2024-05-21 10:35:44,508:INFO:SubProcess create_model() called ==================================
2024-05-21 10:35:44,526:INFO:Initializing create_model()
2024-05-21 10:35:44,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17256d1e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:35:44,527:INFO:Checking exceptions
2024-05-21 10:35:44,527:INFO:Importing libraries
2024-05-21 10:35:44,527:INFO:Copying training dataset
2024-05-21 10:35:45,367:INFO:Defining folds
2024-05-21 10:35:45,367:INFO:Declaring metric variables
2024-05-21 10:35:45,368:INFO:Importing untrained model
2024-05-21 10:35:45,369:INFO:Declaring custom model
2024-05-21 10:35:45,375:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-21 10:35:45,378:INFO:Starting cross validation
2024-05-21 10:35:45,384:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:35:48,597:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:48,611:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:48,698:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:35:48,698:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:35:48,698:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:35:48,714:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:35:48,714:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:35:48,714:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:35:48,984:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:49,082:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:35:49,082:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:35:49,082:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:35:49,458:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:49,537:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:35:49,538:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:35:49,538:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:35:49,686:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:49,757:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:35:49,758:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:35:49,758:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:35:53,254:INFO:Calculating mean and std
2024-05-21 10:35:53,256:INFO:Creating metrics dataframe
2024-05-21 10:35:53,259:INFO:Uploading results into container
2024-05-21 10:35:53,260:INFO:Uploading model into container now
2024-05-21 10:35:53,260:INFO:_master_model_container: 1
2024-05-21 10:35:53,260:INFO:_display_container: 2
2024-05-21 10:35:53,279:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2024-05-21 10:35:53,279:INFO:create_model() successfully completed......................................
2024-05-21 10:35:53,358:INFO:SubProcess create_model() end ==================================
2024-05-21 10:35:53,358:INFO:Creating metrics dataframe
2024-05-21 10:35:53,362:INFO:Initializing custom model Light Gradient Boosting Machine
2024-05-21 10:35:53,362:INFO:Total runtime is 0.14758863051732382 minutes
2024-05-21 10:35:53,363:INFO:SubProcess create_model() called ==================================
2024-05-21 10:35:53,379:INFO:Initializing create_model()
2024-05-21 10:35:53,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17256d1e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:35:53,379:INFO:Checking exceptions
2024-05-21 10:35:53,379:INFO:Importing libraries
2024-05-21 10:35:53,380:INFO:Copying training dataset
2024-05-21 10:35:54,326:INFO:Defining folds
2024-05-21 10:35:54,326:INFO:Declaring metric variables
2024-05-21 10:35:54,328:INFO:Importing untrained model
2024-05-21 10:35:54,328:INFO:Declaring custom model
2024-05-21 10:35:54,334:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-21 10:35:54,337:INFO:Starting cross validation
2024-05-21 10:35:54,344:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:35:55,643:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:56,459:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:56,946:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:57,057:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:35:57,710:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:01,194:INFO:Calculating mean and std
2024-05-21 10:36:01,195:INFO:Creating metrics dataframe
2024-05-21 10:36:01,197:INFO:Uploading results into container
2024-05-21 10:36:01,197:INFO:Uploading model into container now
2024-05-21 10:36:01,198:INFO:_master_model_container: 2
2024-05-21 10:36:01,198:INFO:_display_container: 2
2024-05-21 10:36:01,214:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2024-05-21 10:36:01,214:INFO:create_model() successfully completed......................................
2024-05-21 10:36:01,275:INFO:SubProcess create_model() end ==================================
2024-05-21 10:36:01,275:INFO:Creating metrics dataframe
2024-05-21 10:36:01,278:INFO:Initializing custom model Light Gradient Boosting Machine
2024-05-21 10:36:01,278:INFO:Total runtime is 0.27953402996063237 minutes
2024-05-21 10:36:01,280:INFO:SubProcess create_model() called ==================================
2024-05-21 10:36:01,296:INFO:Initializing create_model()
2024-05-21 10:36:01,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17256d1e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:36:01,296:INFO:Checking exceptions
2024-05-21 10:36:01,296:INFO:Importing libraries
2024-05-21 10:36:01,296:INFO:Copying training dataset
2024-05-21 10:36:02,194:INFO:Defining folds
2024-05-21 10:36:02,195:INFO:Declaring metric variables
2024-05-21 10:36:02,197:INFO:Importing untrained model
2024-05-21 10:36:02,197:INFO:Declaring custom model
2024-05-21 10:36:02,203:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-21 10:36:02,206:INFO:Starting cross validation
2024-05-21 10:36:02,212:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:36:03,316:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:03,708:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:04,441:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:04,669:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:05,659:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:09,014:INFO:Calculating mean and std
2024-05-21 10:36:09,016:INFO:Creating metrics dataframe
2024-05-21 10:36:09,020:INFO:Uploading results into container
2024-05-21 10:36:09,020:INFO:Uploading model into container now
2024-05-21 10:36:09,020:INFO:_master_model_container: 3
2024-05-21 10:36:09,020:INFO:_display_container: 2
2024-05-21 10:36:09,037:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2024-05-21 10:36:09,037:INFO:create_model() successfully completed......................................
2024-05-21 10:36:09,124:INFO:SubProcess create_model() end ==================================
2024-05-21 10:36:09,125:INFO:Creating metrics dataframe
2024-05-21 10:36:09,128:INFO:Initializing custom model Light Gradient Boosting Machine
2024-05-21 10:36:09,128:INFO:Total runtime is 0.41036356687545783 minutes
2024-05-21 10:36:09,130:INFO:SubProcess create_model() called ==================================
2024-05-21 10:36:09,146:INFO:Initializing create_model()
2024-05-21 10:36:09,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17256d1e0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:36:09,146:INFO:Checking exceptions
2024-05-21 10:36:09,146:INFO:Importing libraries
2024-05-21 10:36:09,146:INFO:Copying training dataset
2024-05-21 10:36:10,122:INFO:Defining folds
2024-05-21 10:36:10,122:INFO:Declaring metric variables
2024-05-21 10:36:10,124:INFO:Importing untrained model
2024-05-21 10:36:10,124:INFO:Declaring custom model
2024-05-21 10:36:10,131:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-21 10:36:10,134:INFO:Starting cross validation
2024-05-21 10:36:10,140:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:36:11,323:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:11,528:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:12,098:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:12,482:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:25,134:INFO:Initializing load_model()
2024-05-21 10:36:25,134:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:36:25,153:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.26.4', 'pandas': '2.1.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.5', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.4', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.8.0', 'pycaret': '3.3.2', 'IPython': '8.12.0', 'ipywidgets': '8.0.4', 'tqdm': '4.64.1', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.3', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.2.1', 'numba': '0.58.1', 'requests': '2.29.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2024-05-21 10:36:25,154:INFO:Initializing load_model()
2024-05-21 10:36:25,154:INFO:load_model(model_name=../../data4rev/pycaret/saved_xgboost_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:36:25,172:INFO:Initializing load_model()
2024-05-21 10:36:25,173:INFO:load_model(model_name=../../data4rev/pycaret/saved_ada_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:36:25,191:INFO:Initializing load_model()
2024-05-21 10:36:25,191:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:36:25,217:INFO:Initializing load_model()
2024-05-21 10:36:25,217:INFO:load_model(model_name=../../data4rev/pycaret/saved_lda_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:36:25,246:INFO:Initializing load_model()
2024-05-21 10:36:25,246:INFO:load_model(model_name=../../data4rev/pycaret/saved_lr_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:36:25,258:INFO:Initializing load_model()
2024-05-21 10:36:25,258:INFO:load_model(model_name=../../data4rev/pycaret/saved_et_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:36:25,283:INFO:Initializing load_model()
2024-05-21 10:36:25,283:INFO:load_model(model_name=../../data4rev/pycaret/saved_svm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:36:25,519:INFO:Initializing compare_models()
2024-05-21 10:36:25,519:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, include=[Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)], fold=None, round=4, cross_validation=True, sort=BA, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, 'include': [Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'BA', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-21 10:36:25,519:INFO:Checking exceptions
2024-05-21 10:36:25,795:INFO:Preparing display monitor
2024-05-21 10:36:25,804:INFO:Initializing custom model Light Gradient Boosting Machine
2024-05-21 10:36:25,804:INFO:Total runtime is 5.467732747395833e-06 minutes
2024-05-21 10:36:25,805:INFO:SubProcess create_model() called ==================================
2024-05-21 10:36:25,824:INFO:Initializing create_model()
2024-05-21 10:36:25,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307898340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:36:25,824:INFO:Checking exceptions
2024-05-21 10:36:25,824:INFO:Importing libraries
2024-05-21 10:36:25,824:INFO:Copying training dataset
2024-05-21 10:36:26,711:INFO:Defining folds
2024-05-21 10:36:26,711:INFO:Declaring metric variables
2024-05-21 10:36:26,712:INFO:Importing untrained model
2024-05-21 10:36:26,712:INFO:Declaring custom model
2024-05-21 10:36:26,719:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-21 10:36:26,722:INFO:Starting cross validation
2024-05-21 10:36:26,728:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:36:29,198:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:29,279:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:36:29,280:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:36:29,280:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:36:29,453:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:29,550:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:36:29,550:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:36:29,550:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:36:29,820:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:29,909:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:36:29,909:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:36:29,909:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:36:30,265:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:30,352:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:36:30,352:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:36:30,352:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:36:30,530:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:36:30,611:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:36:30,611:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:36:30,611:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:36:34,070:INFO:Calculating mean and std
2024-05-21 10:36:34,072:INFO:Creating metrics dataframe
2024-05-21 10:36:34,076:INFO:Uploading results into container
2024-05-21 10:36:34,077:INFO:Uploading model into container now
2024-05-21 10:36:34,078:INFO:_master_model_container: 4
2024-05-21 10:36:34,078:INFO:_display_container: 2
2024-05-21 10:36:34,095:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2024-05-21 10:36:34,095:INFO:create_model() successfully completed......................................
2024-05-21 10:36:34,198:INFO:SubProcess create_model() end ==================================
2024-05-21 10:36:34,198:INFO:Creating metrics dataframe
2024-05-21 10:36:34,202:INFO:Initializing custom model Extreme Gradient Boosting
2024-05-21 10:36:34,202:INFO:Total runtime is 0.13997720082600912 minutes
2024-05-21 10:36:34,204:INFO:SubProcess create_model() called ==================================
2024-05-21 10:36:34,223:INFO:Initializing create_model()
2024-05-21 10:36:34,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307898340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:36:34,223:INFO:Checking exceptions
2024-05-21 10:36:34,223:INFO:Importing libraries
2024-05-21 10:36:34,223:INFO:Copying training dataset
2024-05-21 10:36:35,132:INFO:Defining folds
2024-05-21 10:36:35,132:INFO:Declaring metric variables
2024-05-21 10:36:35,134:INFO:Importing untrained model
2024-05-21 10:36:35,134:INFO:Declaring custom model
2024-05-21 10:36:35,141:INFO:Extreme Gradient Boosting Imported successfully
2024-05-21 10:36:35,144:INFO:Starting cross validation
2024-05-21 10:36:35,150:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:36:36,534:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:36,535:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:36,575:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:36,594:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:37,011:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:36:37,060:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:37,060:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:37,110:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:37,130:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:37,542:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:37,542:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:37,587:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:37,598:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:36:37,604:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:37,633:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:37,634:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:37,683:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:37,704:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:38,027:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:36:38,103:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:36:38,293:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:38,293:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:38,336:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:38,359:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:38,717:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:36:45,167:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:45,167:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:45,205:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:45,221:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:45,314:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:45,314:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:45,358:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:45,378:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:45,819:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:45,819:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:45,856:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:45,872:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:45,956:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:45,956:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:45,993:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:46,010:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:46,027:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:46,027:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:46,064:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:46,080:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:46,130:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:46,130:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:46,163:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:46,163:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:46,167:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:46,183:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:46,200:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:46,216:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:46,263:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:46,263:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:46,300:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:46,317:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:46,575:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:46,575:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:46,610:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:46,625:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:46,700:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:36:46,700:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:36:46,735:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:36:46,750:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:36:46,832:INFO:Calculating mean and std
2024-05-21 10:36:46,834:INFO:Creating metrics dataframe
2024-05-21 10:36:46,837:INFO:Uploading results into container
2024-05-21 10:36:46,838:INFO:Uploading model into container now
2024-05-21 10:36:46,838:INFO:_master_model_container: 5
2024-05-21 10:36:46,838:INFO:_display_container: 2
2024-05-21 10:36:46,857:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False)
2024-05-21 10:36:46,857:INFO:create_model() successfully completed......................................
2024-05-21 10:36:46,940:INFO:SubProcess create_model() end ==================================
2024-05-21 10:36:46,941:INFO:Creating metrics dataframe
2024-05-21 10:36:46,944:INFO:Initializing custom model Ada Boost Classifier
2024-05-21 10:36:46,944:INFO:Total runtime is 0.3523403326670329 minutes
2024-05-21 10:36:46,946:INFO:SubProcess create_model() called ==================================
2024-05-21 10:36:46,962:INFO:Initializing create_model()
2024-05-21 10:36:46,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307898340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:36:46,962:INFO:Checking exceptions
2024-05-21 10:36:46,962:INFO:Importing libraries
2024-05-21 10:36:46,962:INFO:Copying training dataset
2024-05-21 10:36:47,810:INFO:Defining folds
2024-05-21 10:36:47,810:INFO:Declaring metric variables
2024-05-21 10:36:47,812:INFO:Importing untrained model
2024-05-21 10:36:47,812:INFO:Declaring custom model
2024-05-21 10:36:47,818:INFO:Ada Boost Classifier Imported successfully
2024-05-21 10:36:47,821:INFO:Starting cross validation
2024-05-21 10:36:47,827:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:36:49,558:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:36:49,982:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:36:50,174:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:36:50,431:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:36:50,470:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:37:05,983:INFO:Calculating mean and std
2024-05-21 10:37:05,984:INFO:Creating metrics dataframe
2024-05-21 10:37:05,985:INFO:Uploading results into container
2024-05-21 10:37:05,986:INFO:Uploading model into container now
2024-05-21 10:37:05,986:INFO:_master_model_container: 6
2024-05-21 10:37:05,986:INFO:_display_container: 2
2024-05-21 10:37:06,002:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False)
2024-05-21 10:37:06,002:INFO:create_model() successfully completed......................................
2024-05-21 10:37:06,107:INFO:SubProcess create_model() end ==================================
2024-05-21 10:37:06,107:INFO:Creating metrics dataframe
2024-05-21 10:37:06,110:INFO:Initializing custom model Random Forest Classifier
2024-05-21 10:37:06,110:INFO:Total runtime is 0.6717743317286173 minutes
2024-05-21 10:37:06,112:INFO:SubProcess create_model() called ==================================
2024-05-21 10:37:06,127:INFO:Initializing create_model()
2024-05-21 10:37:06,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307898340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:37:06,127:INFO:Checking exceptions
2024-05-21 10:37:06,127:INFO:Importing libraries
2024-05-21 10:37:06,127:INFO:Copying training dataset
2024-05-21 10:37:07,015:INFO:Defining folds
2024-05-21 10:37:07,015:INFO:Declaring metric variables
2024-05-21 10:37:07,017:INFO:Importing untrained model
2024-05-21 10:37:07,017:INFO:Declaring custom model
2024-05-21 10:37:07,024:INFO:Random Forest Classifier Imported successfully
2024-05-21 10:37:07,026:INFO:Starting cross validation
2024-05-21 10:37:07,033:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:37:10,123:INFO:Calculating mean and std
2024-05-21 10:37:10,125:INFO:Creating metrics dataframe
2024-05-21 10:37:10,128:INFO:Uploading results into container
2024-05-21 10:37:10,128:INFO:Uploading model into container now
2024-05-21 10:37:10,128:INFO:_master_model_container: 7
2024-05-21 10:37:10,128:INFO:_display_container: 2
2024-05-21 10:37:10,148:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-21 10:37:10,148:INFO:create_model() successfully completed......................................
2024-05-21 10:37:10,248:INFO:SubProcess create_model() end ==================================
2024-05-21 10:37:10,248:INFO:Creating metrics dataframe
2024-05-21 10:37:10,252:INFO:Initializing custom model Linear Discriminant Analysis
2024-05-21 10:37:10,252:INFO:Total runtime is 0.7407990654309591 minutes
2024-05-21 10:37:10,253:INFO:SubProcess create_model() called ==================================
2024-05-21 10:37:10,269:INFO:Initializing create_model()
2024-05-21 10:37:10,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307898340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:37:10,270:INFO:Checking exceptions
2024-05-21 10:37:10,270:INFO:Importing libraries
2024-05-21 10:37:10,270:INFO:Copying training dataset
2024-05-21 10:37:11,186:INFO:Defining folds
2024-05-21 10:37:11,186:INFO:Declaring metric variables
2024-05-21 10:37:11,188:INFO:Importing untrained model
2024-05-21 10:37:11,188:INFO:Declaring custom model
2024-05-21 10:37:11,195:INFO:Linear Discriminant Analysis Imported successfully
2024-05-21 10:37:11,197:INFO:Starting cross validation
2024-05-21 10:37:11,204:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:37:41,293:INFO:Calculating mean and std
2024-05-21 10:37:41,295:INFO:Creating metrics dataframe
2024-05-21 10:37:41,299:INFO:Uploading results into container
2024-05-21 10:37:41,299:INFO:Uploading model into container now
2024-05-21 10:37:41,299:INFO:_master_model_container: 8
2024-05-21 10:37:41,299:INFO:_display_container: 2
2024-05-21 10:37:41,317:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2024-05-21 10:37:41,317:INFO:create_model() successfully completed......................................
2024-05-21 10:37:41,410:INFO:SubProcess create_model() end ==================================
2024-05-21 10:37:41,410:INFO:Creating metrics dataframe
2024-05-21 10:37:41,414:INFO:Initializing custom model Logistic Regression
2024-05-21 10:37:41,414:INFO:Total runtime is 1.260170869032542 minutes
2024-05-21 10:37:41,416:INFO:SubProcess create_model() called ==================================
2024-05-21 10:37:41,432:INFO:Initializing create_model()
2024-05-21 10:37:41,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307898340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:37:41,432:INFO:Checking exceptions
2024-05-21 10:37:41,432:INFO:Importing libraries
2024-05-21 10:37:41,432:INFO:Copying training dataset
2024-05-21 10:37:42,325:INFO:Defining folds
2024-05-21 10:37:42,325:INFO:Declaring metric variables
2024-05-21 10:37:42,327:INFO:Importing untrained model
2024-05-21 10:37:42,327:INFO:Declaring custom model
2024-05-21 10:37:42,334:INFO:Logistic Regression Imported successfully
2024-05-21 10:37:42,337:INFO:Starting cross validation
2024-05-21 10:37:42,344:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:37:48,683:INFO:Calculating mean and std
2024-05-21 10:37:48,684:INFO:Creating metrics dataframe
2024-05-21 10:37:48,686:INFO:Uploading results into container
2024-05-21 10:37:48,686:INFO:Uploading model into container now
2024-05-21 10:37:48,687:INFO:_master_model_container: 9
2024-05-21 10:37:48,687:INFO:_display_container: 2
2024-05-21 10:37:48,704:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-05-21 10:37:48,704:INFO:create_model() successfully completed......................................
2024-05-21 10:37:48,786:INFO:SubProcess create_model() end ==================================
2024-05-21 10:37:48,786:INFO:Creating metrics dataframe
2024-05-21 10:37:48,790:INFO:Initializing custom model Extra Trees Classifier
2024-05-21 10:37:48,790:INFO:Total runtime is 1.3831033825874328 minutes
2024-05-21 10:37:48,792:INFO:SubProcess create_model() called ==================================
2024-05-21 10:37:48,809:INFO:Initializing create_model()
2024-05-21 10:37:48,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307898340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:37:48,809:INFO:Checking exceptions
2024-05-21 10:37:48,809:INFO:Importing libraries
2024-05-21 10:37:48,809:INFO:Copying training dataset
2024-05-21 10:37:49,686:INFO:Defining folds
2024-05-21 10:37:49,686:INFO:Declaring metric variables
2024-05-21 10:37:49,688:INFO:Importing untrained model
2024-05-21 10:37:49,688:INFO:Declaring custom model
2024-05-21 10:37:49,695:INFO:Extra Trees Classifier Imported successfully
2024-05-21 10:37:49,697:INFO:Starting cross validation
2024-05-21 10:37:49,703:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:37:52,454:INFO:Calculating mean and std
2024-05-21 10:37:52,456:INFO:Creating metrics dataframe
2024-05-21 10:37:52,458:INFO:Uploading results into container
2024-05-21 10:37:52,459:INFO:Uploading model into container now
2024-05-21 10:37:52,459:INFO:_master_model_container: 10
2024-05-21 10:37:52,459:INFO:_display_container: 2
2024-05-21 10:37:52,478:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-05-21 10:37:52,478:INFO:create_model() successfully completed......................................
2024-05-21 10:37:52,580:INFO:SubProcess create_model() end ==================================
2024-05-21 10:37:52,580:INFO:Creating metrics dataframe
2024-05-21 10:37:52,585:INFO:Initializing custom model SVM - Linear Kernel
2024-05-21 10:37:52,585:INFO:Total runtime is 1.4463468352953592 minutes
2024-05-21 10:37:52,586:INFO:SubProcess create_model() called ==================================
2024-05-21 10:37:52,604:INFO:Initializing create_model()
2024-05-21 10:37:52,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307898340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:37:52,604:INFO:Checking exceptions
2024-05-21 10:37:52,604:INFO:Importing libraries
2024-05-21 10:37:52,604:INFO:Copying training dataset
2024-05-21 10:37:53,535:INFO:Defining folds
2024-05-21 10:37:53,535:INFO:Declaring metric variables
2024-05-21 10:37:53,537:INFO:Importing untrained model
2024-05-21 10:37:53,537:INFO:Declaring custom model
2024-05-21 10:37:53,544:INFO:SVM - Linear Kernel Imported successfully
2024-05-21 10:37:53,546:INFO:Starting cross validation
2024-05-21 10:37:53,553:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:37:57,616:INFO:Calculating mean and std
2024-05-21 10:37:57,617:INFO:Creating metrics dataframe
2024-05-21 10:37:57,618:INFO:Uploading results into container
2024-05-21 10:37:57,618:INFO:Uploading model into container now
2024-05-21 10:37:57,619:INFO:_master_model_container: 11
2024-05-21 10:37:57,619:INFO:_display_container: 2
2024-05-21 10:37:57,635:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)
2024-05-21 10:37:57,635:INFO:create_model() successfully completed......................................
2024-05-21 10:37:57,717:INFO:SubProcess create_model() end ==================================
2024-05-21 10:37:57,717:INFO:Creating metrics dataframe
2024-05-21 10:37:57,722:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-21 10:37:57,746:INFO:Initializing create_model()
2024-05-21 10:37:57,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:37:57,747:INFO:Checking exceptions
2024-05-21 10:37:57,748:INFO:Importing libraries
2024-05-21 10:37:57,748:INFO:Copying training dataset
2024-05-21 10:37:58,621:INFO:Defining folds
2024-05-21 10:37:58,622:INFO:Declaring metric variables
2024-05-21 10:37:58,622:INFO:Importing untrained model
2024-05-21 10:37:58,622:INFO:Declaring custom model
2024-05-21 10:37:58,628:INFO:Extreme Gradient Boosting Imported successfully
2024-05-21 10:37:58,634:INFO:Cross validation set to False
2024-05-21 10:37:58,634:INFO:Fitting Model
2024-05-21 10:37:59,423:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:37:59,423:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:37:59,459:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:37:59,475:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:37:59,602:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:38:01,741:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False)
2024-05-21 10:38:01,741:INFO:create_model() successfully completed......................................
2024-05-21 10:38:01,820:INFO:_master_model_container: 11
2024-05-21 10:38:01,820:INFO:_display_container: 2
2024-05-21 10:38:01,842:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False)
2024-05-21 10:38:01,842:INFO:compare_models() successfully completed......................................
2024-05-21 10:57:22,450:INFO:Initializing load_model()
2024-05-21 10:57:22,451:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,473:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.26.4', 'pandas': '2.1.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.5', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.4', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.8.0', 'pycaret': '3.3.2', 'IPython': '8.12.0', 'ipywidgets': '8.0.4', 'tqdm': '4.64.1', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.3', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.2.1', 'numba': '0.58.1', 'requests': '2.29.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2024-05-21 10:57:22,474:INFO:Initializing load_model()
2024-05-21 10:57:22,475:INFO:load_model(model_name=../../data4rev/pycaret/saved_xgboost_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,493:INFO:Initializing load_model()
2024-05-21 10:57:22,493:INFO:load_model(model_name=../../data4rev/pycaret/saved_ada_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,515:INFO:Initializing load_model()
2024-05-21 10:57:22,515:INFO:load_model(model_name=../../data4rev/pycaret/saved_gbc_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,531:INFO:Initializing load_model()
2024-05-21 10:57:22,531:INFO:load_model(model_name=../../data4rev/pycaret/saved_dt_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,544:INFO:Initializing load_model()
2024-05-21 10:57:22,544:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,568:INFO:Initializing load_model()
2024-05-21 10:57:22,568:INFO:load_model(model_name=../../data4rev/pycaret/saved_lda_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,596:INFO:Initializing load_model()
2024-05-21 10:57:22,596:INFO:load_model(model_name=../../data4rev/pycaret/saved_lr_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,609:INFO:Initializing load_model()
2024-05-21 10:57:22,609:INFO:load_model(model_name=../../data4rev/pycaret/saved_et_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,633:INFO:Initializing load_model()
2024-05-21 10:57:22,633:INFO:load_model(model_name=../../data4rev/pycaret/saved_svm_model, platform=None, authentication=None, verbose=True)
2024-05-21 10:57:22,949:INFO:Initializing compare_models()
2024-05-21 10:57:22,949:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, include=[Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.15, loss='log_loss',
                                            max_depth=9, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=60,
                                            n_iter_no_change=None,
                                            random_state=444, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=444,
                                        splitter='best'))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)], fold=None, round=4, cross_validation=True, sort=BA, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, 'include': [Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.15, loss='log_loss',
                                            max_depth=9, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=60,
                                            n_iter_no_change=None,
                                            random_state=444, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=444,
                                        splitter='best'))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'BA', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-21 10:57:22,949:INFO:Checking exceptions
2024-05-21 10:57:23,233:INFO:Preparing display monitor
2024-05-21 10:57:23,243:INFO:Initializing custom model Light Gradient Boosting Machine
2024-05-21 10:57:23,243:INFO:Total runtime is 5.698204040527343e-06 minutes
2024-05-21 10:57:23,244:INFO:SubProcess create_model() called ==================================
2024-05-21 10:57:23,264:INFO:Initializing create_model()
2024-05-21 10:57:23,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:57:23,265:INFO:Checking exceptions
2024-05-21 10:57:23,265:INFO:Importing libraries
2024-05-21 10:57:23,265:INFO:Copying training dataset
2024-05-21 10:57:24,200:INFO:Defining folds
2024-05-21 10:57:24,200:INFO:Declaring metric variables
2024-05-21 10:57:24,202:INFO:Importing untrained model
2024-05-21 10:57:24,202:INFO:Declaring custom model
2024-05-21 10:57:24,209:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-21 10:57:24,211:INFO:Starting cross validation
2024-05-21 10:57:24,218:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:57:27,353:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:57:27,353:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:57:27,455:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:57:27,455:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:57:27,455:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:57:27,456:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:57:27,456:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:57:27,456:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:57:27,724:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:57:27,817:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:57:27,817:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:57:27,817:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:57:28,077:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:57:28,159:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:57:28,159:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:57:28,159:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:57:28,526:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 10:57:28,601:INFO:[LightGBM] [Warning] bagging_freq is set=0, subsample_freq=0 will be ignored. Current value: bagging_freq=0
2024-05-21 10:57:28,601:INFO:[LightGBM] [Warning] feature_fraction is set=0.4, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.4
2024-05-21 10:57:28,601:INFO:[LightGBM] [Warning] bagging_fraction is set=0.5, subsample=1.0 will be ignored. Current value: bagging_fraction=0.5
2024-05-21 10:57:31,866:INFO:Calculating mean and std
2024-05-21 10:57:31,868:INFO:Creating metrics dataframe
2024-05-21 10:57:31,872:INFO:Uploading results into container
2024-05-21 10:57:31,872:INFO:Uploading model into container now
2024-05-21 10:57:31,873:INFO:_master_model_container: 12
2024-05-21 10:57:31,873:INFO:_display_container: 3
2024-05-21 10:57:31,889:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2024-05-21 10:57:31,890:INFO:create_model() successfully completed......................................
2024-05-21 10:57:32,002:INFO:SubProcess create_model() end ==================================
2024-05-21 10:57:32,002:INFO:Creating metrics dataframe
2024-05-21 10:57:32,006:INFO:Initializing custom model Extreme Gradient Boosting
2024-05-21 10:57:32,006:INFO:Total runtime is 0.1460636615753174 minutes
2024-05-21 10:57:32,008:INFO:SubProcess create_model() called ==================================
2024-05-21 10:57:32,025:INFO:Initializing create_model()
2024-05-21 10:57:32,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:57:32,025:INFO:Checking exceptions
2024-05-21 10:57:32,026:INFO:Importing libraries
2024-05-21 10:57:32,026:INFO:Copying training dataset
2024-05-21 10:57:32,944:INFO:Defining folds
2024-05-21 10:57:32,944:INFO:Declaring metric variables
2024-05-21 10:57:32,946:INFO:Importing untrained model
2024-05-21 10:57:32,946:INFO:Declaring custom model
2024-05-21 10:57:32,954:INFO:Extreme Gradient Boosting Imported successfully
2024-05-21 10:57:32,957:INFO:Starting cross validation
2024-05-21 10:57:32,963:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:57:34,317:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:34,317:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:34,372:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:34,390:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:34,747:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:34,747:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:34,802:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:34,815:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:57:34,827:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:35,097:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:35,097:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:35,143:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:35,161:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:35,241:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:57:35,562:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:57:35,747:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:35,747:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:35,792:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:35,815:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:36,173:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:57:36,441:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:36,441:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:36,485:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:36,501:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:36,865:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 10:57:42,861:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:42,862:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:42,898:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:42,920:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:43,013:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:43,013:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:43,049:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:43,072:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:43,289:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:43,289:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:43,326:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:43,342:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:43,422:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:43,422:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:43,459:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:43,475:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:43,581:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:43,581:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:43,618:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:43,634:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:43,713:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:43,713:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:43,749:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:43,765:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:44,062:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:44,062:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:44,098:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:44,114:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:44,192:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:44,192:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:44,228:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:44,244:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:44,693:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:44,693:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:44,727:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:44,742:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:44,816:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 10:57:44,817:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 10:57:44,851:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 10:57:44,866:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 10:57:44,953:INFO:Calculating mean and std
2024-05-21 10:57:44,954:INFO:Creating metrics dataframe
2024-05-21 10:57:44,955:INFO:Uploading results into container
2024-05-21 10:57:44,956:INFO:Uploading model into container now
2024-05-21 10:57:44,956:INFO:_master_model_container: 13
2024-05-21 10:57:44,956:INFO:_display_container: 3
2024-05-21 10:57:44,975:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False)
2024-05-21 10:57:44,975:INFO:create_model() successfully completed......................................
2024-05-21 10:57:45,060:INFO:SubProcess create_model() end ==================================
2024-05-21 10:57:45,060:INFO:Creating metrics dataframe
2024-05-21 10:57:45,063:INFO:Initializing custom model Ada Boost Classifier
2024-05-21 10:57:45,063:INFO:Total runtime is 0.3636787494023641 minutes
2024-05-21 10:57:45,065:INFO:SubProcess create_model() called ==================================
2024-05-21 10:57:45,081:INFO:Initializing create_model()
2024-05-21 10:57:45,081:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:57:45,081:INFO:Checking exceptions
2024-05-21 10:57:45,081:INFO:Importing libraries
2024-05-21 10:57:45,081:INFO:Copying training dataset
2024-05-21 10:57:45,905:INFO:Defining folds
2024-05-21 10:57:45,906:INFO:Declaring metric variables
2024-05-21 10:57:45,907:INFO:Importing untrained model
2024-05-21 10:57:45,907:INFO:Declaring custom model
2024-05-21 10:57:45,914:INFO:Ada Boost Classifier Imported successfully
2024-05-21 10:57:45,916:INFO:Starting cross validation
2024-05-21 10:57:45,922:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:57:46,938:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:57:47,625:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:57:48,018:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:57:48,571:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:57:48,580:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 10:58:04,096:INFO:Calculating mean and std
2024-05-21 10:58:04,097:INFO:Creating metrics dataframe
2024-05-21 10:58:04,098:INFO:Uploading results into container
2024-05-21 10:58:04,098:INFO:Uploading model into container now
2024-05-21 10:58:04,098:INFO:_master_model_container: 14
2024-05-21 10:58:04,098:INFO:_display_container: 3
2024-05-21 10:58:04,116:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False)
2024-05-21 10:58:04,116:INFO:create_model() successfully completed......................................
2024-05-21 10:58:04,192:INFO:SubProcess create_model() end ==================================
2024-05-21 10:58:04,192:INFO:Creating metrics dataframe
2024-05-21 10:58:04,195:INFO:Initializing custom model Gradient Boosting Classifier
2024-05-21 10:58:04,196:INFO:Total runtime is 0.6825514634450277 minutes
2024-05-21 10:58:04,197:INFO:SubProcess create_model() called ==================================
2024-05-21 10:58:04,213:INFO:Initializing create_model()
2024-05-21 10:58:04,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.15, loss='log_loss',
                                            max_depth=9, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=60,
                                            n_iter_no_change=None,
                                            random_state=444, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:58:04,214:INFO:Checking exceptions
2024-05-21 10:58:04,214:INFO:Importing libraries
2024-05-21 10:58:04,214:INFO:Copying training dataset
2024-05-21 10:58:05,082:INFO:Defining folds
2024-05-21 10:58:05,083:INFO:Declaring metric variables
2024-05-21 10:58:05,084:INFO:Importing untrained model
2024-05-21 10:58:05,084:INFO:Declaring custom model
2024-05-21 10:58:05,092:INFO:Gradient Boosting Classifier Imported successfully
2024-05-21 10:58:05,094:INFO:Starting cross validation
2024-05-21 10:58:05,101:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:58:09,755:INFO:Calculating mean and std
2024-05-21 10:58:09,757:INFO:Creating metrics dataframe
2024-05-21 10:58:09,761:INFO:Uploading results into container
2024-05-21 10:58:09,761:INFO:Uploading model into container now
2024-05-21 10:58:09,762:INFO:_master_model_container: 15
2024-05-21 10:58:09,762:INFO:_display_container: 3
2024-05-21 10:58:09,779:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.15, loss='log_loss',
                                            max_depth=9, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=60,
                                            n_iter_no_change=None,
                                            random_state=444, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-05-21 10:58:09,779:INFO:create_model() successfully completed......................................
2024-05-21 10:58:09,880:INFO:SubProcess create_model() end ==================================
2024-05-21 10:58:09,880:INFO:Creating metrics dataframe
2024-05-21 10:58:09,884:INFO:Initializing custom model Decision Tree Classifier
2024-05-21 10:58:09,884:INFO:Total runtime is 0.7773545622825623 minutes
2024-05-21 10:58:09,885:INFO:SubProcess create_model() called ==================================
2024-05-21 10:58:09,901:INFO:Initializing create_model()
2024-05-21 10:58:09,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=444,
                                        splitter='best'))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:58:09,902:INFO:Checking exceptions
2024-05-21 10:58:09,902:INFO:Importing libraries
2024-05-21 10:58:09,902:INFO:Copying training dataset
2024-05-21 10:58:10,820:INFO:Defining folds
2024-05-21 10:58:10,821:INFO:Declaring metric variables
2024-05-21 10:58:10,823:INFO:Importing untrained model
2024-05-21 10:58:10,823:INFO:Declaring custom model
2024-05-21 10:58:10,829:INFO:Decision Tree Classifier Imported successfully
2024-05-21 10:58:10,831:INFO:Starting cross validation
2024-05-21 10:58:10,838:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:58:31,897:INFO:Calculating mean and std
2024-05-21 10:58:31,899:INFO:Creating metrics dataframe
2024-05-21 10:58:31,900:INFO:Uploading results into container
2024-05-21 10:58:31,900:INFO:Uploading model into container now
2024-05-21 10:58:31,900:INFO:_master_model_container: 16
2024-05-21 10:58:31,900:INFO:_display_container: 3
2024-05-21 10:58:31,917:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=444,
                                        splitter='best'))],
         verbose=False)
2024-05-21 10:58:31,917:INFO:create_model() successfully completed......................................
2024-05-21 10:58:31,989:INFO:SubProcess create_model() end ==================================
2024-05-21 10:58:31,989:INFO:Creating metrics dataframe
2024-05-21 10:58:31,993:INFO:Initializing custom model Random Forest Classifier
2024-05-21 10:58:31,993:INFO:Total runtime is 1.1458409269650778 minutes
2024-05-21 10:58:31,994:INFO:SubProcess create_model() called ==================================
2024-05-21 10:58:32,010:INFO:Initializing create_model()
2024-05-21 10:58:32,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:58:32,011:INFO:Checking exceptions
2024-05-21 10:58:32,011:INFO:Importing libraries
2024-05-21 10:58:32,011:INFO:Copying training dataset
2024-05-21 10:58:32,848:INFO:Defining folds
2024-05-21 10:58:32,848:INFO:Declaring metric variables
2024-05-21 10:58:32,850:INFO:Importing untrained model
2024-05-21 10:58:32,850:INFO:Declaring custom model
2024-05-21 10:58:32,857:INFO:Random Forest Classifier Imported successfully
2024-05-21 10:58:32,859:INFO:Starting cross validation
2024-05-21 10:58:32,865:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:58:35,706:INFO:Calculating mean and std
2024-05-21 10:58:35,708:INFO:Creating metrics dataframe
2024-05-21 10:58:35,711:INFO:Uploading results into container
2024-05-21 10:58:35,711:INFO:Uploading model into container now
2024-05-21 10:58:35,712:INFO:_master_model_container: 17
2024-05-21 10:58:35,712:INFO:_display_container: 3
2024-05-21 10:58:35,731:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-21 10:58:35,731:INFO:create_model() successfully completed......................................
2024-05-21 10:58:35,835:INFO:SubProcess create_model() end ==================================
2024-05-21 10:58:35,835:INFO:Creating metrics dataframe
2024-05-21 10:58:35,840:INFO:Initializing custom model Linear Discriminant Analysis
2024-05-21 10:58:35,840:INFO:Total runtime is 1.209954027334849 minutes
2024-05-21 10:58:35,841:INFO:SubProcess create_model() called ==================================
2024-05-21 10:58:35,861:INFO:Initializing create_model()
2024-05-21 10:58:35,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:58:35,862:INFO:Checking exceptions
2024-05-21 10:58:35,862:INFO:Importing libraries
2024-05-21 10:58:35,862:INFO:Copying training dataset
2024-05-21 10:58:36,756:INFO:Defining folds
2024-05-21 10:58:36,757:INFO:Declaring metric variables
2024-05-21 10:58:36,758:INFO:Importing untrained model
2024-05-21 10:58:36,758:INFO:Declaring custom model
2024-05-21 10:58:36,766:INFO:Linear Discriminant Analysis Imported successfully
2024-05-21 10:58:36,768:INFO:Starting cross validation
2024-05-21 10:58:36,774:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:59:06,392:INFO:Calculating mean and std
2024-05-21 10:59:06,395:INFO:Creating metrics dataframe
2024-05-21 10:59:06,398:INFO:Uploading results into container
2024-05-21 10:59:06,398:INFO:Uploading model into container now
2024-05-21 10:59:06,399:INFO:_master_model_container: 18
2024-05-21 10:59:06,399:INFO:_display_container: 3
2024-05-21 10:59:06,415:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2024-05-21 10:59:06,415:INFO:create_model() successfully completed......................................
2024-05-21 10:59:06,514:INFO:SubProcess create_model() end ==================================
2024-05-21 10:59:06,514:INFO:Creating metrics dataframe
2024-05-21 10:59:06,518:INFO:Initializing custom model Logistic Regression
2024-05-21 10:59:06,518:INFO:Total runtime is 1.721260913213094 minutes
2024-05-21 10:59:06,520:INFO:SubProcess create_model() called ==================================
2024-05-21 10:59:06,535:INFO:Initializing create_model()
2024-05-21 10:59:06,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:59:06,535:INFO:Checking exceptions
2024-05-21 10:59:06,535:INFO:Importing libraries
2024-05-21 10:59:06,535:INFO:Copying training dataset
2024-05-21 10:59:07,483:INFO:Defining folds
2024-05-21 10:59:07,483:INFO:Declaring metric variables
2024-05-21 10:59:07,486:INFO:Importing untrained model
2024-05-21 10:59:07,487:INFO:Declaring custom model
2024-05-21 10:59:07,495:INFO:Logistic Regression Imported successfully
2024-05-21 10:59:07,499:INFO:Starting cross validation
2024-05-21 10:59:07,508:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:59:13,517:INFO:Calculating mean and std
2024-05-21 10:59:13,518:INFO:Creating metrics dataframe
2024-05-21 10:59:13,521:INFO:Uploading results into container
2024-05-21 10:59:13,521:INFO:Uploading model into container now
2024-05-21 10:59:13,521:INFO:_master_model_container: 19
2024-05-21 10:59:13,522:INFO:_display_container: 3
2024-05-21 10:59:13,540:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-05-21 10:59:13,540:INFO:create_model() successfully completed......................................
2024-05-21 10:59:13,630:INFO:SubProcess create_model() end ==================================
2024-05-21 10:59:13,630:INFO:Creating metrics dataframe
2024-05-21 10:59:13,634:INFO:Initializing custom model Extra Trees Classifier
2024-05-21 10:59:13,634:INFO:Total runtime is 1.8398571292559305 minutes
2024-05-21 10:59:13,636:INFO:SubProcess create_model() called ==================================
2024-05-21 10:59:13,651:INFO:Initializing create_model()
2024-05-21 10:59:13,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:59:13,652:INFO:Checking exceptions
2024-05-21 10:59:13,652:INFO:Importing libraries
2024-05-21 10:59:13,652:INFO:Copying training dataset
2024-05-21 10:59:14,520:INFO:Defining folds
2024-05-21 10:59:14,520:INFO:Declaring metric variables
2024-05-21 10:59:14,522:INFO:Importing untrained model
2024-05-21 10:59:14,522:INFO:Declaring custom model
2024-05-21 10:59:14,529:INFO:Extra Trees Classifier Imported successfully
2024-05-21 10:59:14,531:INFO:Starting cross validation
2024-05-21 10:59:14,537:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:59:17,309:INFO:Calculating mean and std
2024-05-21 10:59:17,311:INFO:Creating metrics dataframe
2024-05-21 10:59:17,314:INFO:Uploading results into container
2024-05-21 10:59:17,315:INFO:Uploading model into container now
2024-05-21 10:59:17,316:INFO:_master_model_container: 20
2024-05-21 10:59:17,316:INFO:_display_container: 3
2024-05-21 10:59:17,335:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-05-21 10:59:17,335:INFO:create_model() successfully completed......................................
2024-05-21 10:59:17,435:INFO:SubProcess create_model() end ==================================
2024-05-21 10:59:17,435:INFO:Creating metrics dataframe
2024-05-21 10:59:17,439:INFO:Initializing custom model SVM - Linear Kernel
2024-05-21 10:59:17,439:INFO:Total runtime is 1.9032756288846333 minutes
2024-05-21 10:59:17,441:INFO:SubProcess create_model() called ==================================
2024-05-21 10:59:17,458:INFO:Initializing create_model()
2024-05-21 10:59:17,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1760b7ac0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:59:17,458:INFO:Checking exceptions
2024-05-21 10:59:17,458:INFO:Importing libraries
2024-05-21 10:59:17,458:INFO:Copying training dataset
2024-05-21 10:59:18,364:INFO:Defining folds
2024-05-21 10:59:18,364:INFO:Declaring metric variables
2024-05-21 10:59:18,366:INFO:Importing untrained model
2024-05-21 10:59:18,366:INFO:Declaring custom model
2024-05-21 10:59:18,373:INFO:SVM - Linear Kernel Imported successfully
2024-05-21 10:59:18,375:INFO:Starting cross validation
2024-05-21 10:59:18,381:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 10:59:22,621:INFO:Calculating mean and std
2024-05-21 10:59:22,622:INFO:Creating metrics dataframe
2024-05-21 10:59:22,623:INFO:Uploading results into container
2024-05-21 10:59:22,623:INFO:Uploading model into container now
2024-05-21 10:59:22,624:INFO:_master_model_container: 21
2024-05-21 10:59:22,624:INFO:_display_container: 3
2024-05-21 10:59:22,641:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)
2024-05-21 10:59:22,641:INFO:create_model() successfully completed......................................
2024-05-21 10:59:22,719:INFO:SubProcess create_model() end ==================================
2024-05-21 10:59:22,719:INFO:Creating metrics dataframe
2024-05-21 10:59:22,723:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-21 10:59:22,746:INFO:Initializing create_model()
2024-05-21 10:59:22,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 10:59:22,746:INFO:Checking exceptions
2024-05-21 10:59:22,747:INFO:Importing libraries
2024-05-21 10:59:22,747:INFO:Copying training dataset
2024-05-21 10:59:23,608:INFO:Defining folds
2024-05-21 10:59:23,608:INFO:Declaring metric variables
2024-05-21 10:59:23,608:INFO:Importing untrained model
2024-05-21 10:59:23,608:INFO:Declaring custom model
2024-05-21 10:59:23,613:INFO:Extreme Gradient Boosting Imported successfully
2024-05-21 10:59:23,619:INFO:Cross validation set to False
2024-05-21 10:59:23,619:INFO:Fitting Model
2024-05-21 10:59:24,394:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False)
2024-05-21 10:59:24,394:INFO:create_model() successfully completed......................................
2024-05-21 10:59:24,473:INFO:_master_model_container: 21
2024-05-21 10:59:24,473:INFO:_display_container: 3
2024-05-21 10:59:24,493:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False)
2024-05-21 10:59:24,493:INFO:compare_models() successfully completed......................................
2024-05-21 11:37:48,644:INFO:Initializing load_model()
2024-05-21 11:37:48,645:INFO:load_model(model_name=../../data4rev/pycaret/saved_velgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,693:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.2', 'setuptools': '69.0.3', 'pycaret': '3.3.2', 'IPython': '8.20.0', 'ipywidgets': '8.1.1', 'tqdm': '4.66.1', 'numpy': '1.26.4', 'pandas': '2.1.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.3.5', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.18.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.4', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.13', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '23.1.2', 'setuptools': '67.8.0', 'pycaret': '3.3.2', 'IPython': '8.12.0', 'ipywidgets': '8.0.4', 'tqdm': '4.64.1', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.3', 'joblib': '1.2.0', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '3.2.1', 'numba': '0.58.1', 'requests': '2.29.0', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '3.3.0', 'wurlitzer': '3.1.0'}, 'python': {'version': '3.10.11', 'machine': 'x86_64'}}
  warnings.warn(

2024-05-21 11:37:48,694:INFO:Initializing load_model()
2024-05-21 11:37:48,694:INFO:load_model(model_name=../../data4rev/pycaret/saved_lightgbm_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,711:INFO:Initializing load_model()
2024-05-21 11:37:48,711:INFO:load_model(model_name=../../data4rev/pycaret/saved_xgboost_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,727:INFO:Initializing load_model()
2024-05-21 11:37:48,727:INFO:load_model(model_name=../../data4rev/pycaret/saved_ada_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,746:INFO:Initializing load_model()
2024-05-21 11:37:48,747:INFO:load_model(model_name=../../data4rev/pycaret/saved_gbc_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,762:INFO:Initializing load_model()
2024-05-21 11:37:48,762:INFO:load_model(model_name=../../data4rev/pycaret/saved_dt_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,774:INFO:Initializing load_model()
2024-05-21 11:37:48,775:INFO:load_model(model_name=../../data4rev/pycaret/saved_rf_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,803:INFO:Initializing load_model()
2024-05-21 11:37:48,803:INFO:load_model(model_name=../../data4rev/pycaret/saved_lda_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,869:INFO:Initializing load_model()
2024-05-21 11:37:48,869:INFO:load_model(model_name=../../data4rev/pycaret/saved_lr_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,883:INFO:Initializing load_model()
2024-05-21 11:37:48,883:INFO:load_model(model_name=../../data4rev/pycaret/saved_et_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:48,910:INFO:Initializing load_model()
2024-05-21 11:37:48,910:INFO:load_model(model_name=../../data4rev/pycaret/saved_svm_model, platform=None, authentication=None, verbose=True)
2024-05-21 11:37:49,242:INFO:Initializing compare_models()
2024-05-21 11:37:49,242:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, include=[Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1,
                                    n_jobs=-1, n_voters=10, random_state=42,
                                    verbose=False, voting='soft'))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.15, loss='log_loss',
                                            max_depth=9, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=60,
                                            n_iter_no_change=None,
                                            random_state=444, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=444,
                                        splitter='best'))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)], fold=None, round=4, cross_validation=True, sort=BA, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, 'include': [Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1,
                                    n_jobs=-1, n_voters=10, random_state=42,
                                    verbose=False, voting='soft'))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.15, loss='log_loss',
                                            max_depth=9, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=60,
                                            n_iter_no_change=None,
                                            random_state=444, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=444,
                                        splitter='best'))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'BA', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-21 11:37:49,242:INFO:Checking exceptions
2024-05-21 11:37:49,552:INFO:Preparing display monitor
2024-05-21 11:37:49,562:INFO:Initializing custom model VotingEnsembleLGBM
2024-05-21 11:37:49,562:INFO:Total runtime is 6.8783760070800785e-06 minutes
2024-05-21 11:37:49,563:INFO:SubProcess create_model() called ==================================
2024-05-21 11:37:49,579:INFO:Initializing create_model()
2024-05-21 11:37:49,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1,
                                    n_jobs=-1, n_voters=10, random_state=42,
                                    verbose=False, voting='soft'))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:37:49,579:INFO:Checking exceptions
2024-05-21 11:37:49,580:INFO:Importing libraries
2024-05-21 11:37:49,580:INFO:Copying training dataset
2024-05-21 11:37:50,557:INFO:Defining folds
2024-05-21 11:37:50,557:INFO:Declaring metric variables
2024-05-21 11:37:50,559:INFO:Importing untrained model
2024-05-21 11:37:50,559:INFO:Declaring custom model
2024-05-21 11:37:50,566:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 11:37:50,569:INFO:Starting cross validation
2024-05-21 11:37:50,576:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:37:54,413:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,445:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,455:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,474:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,489:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,489:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,492:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,495:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,496:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,503:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,513:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,526:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,527:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,528:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,555:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:54,569:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:55,173:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:55,176:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:55,185:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:55,193:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:55,196:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:55,196:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:55,202:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:55,204:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:57,113:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:57,117:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:57,117:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:57,117:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:57,117:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:57,117:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:57,120:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:57,125:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:59,076:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:59,085:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:59,090:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:59,093:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:59,095:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:59,104:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:59,105:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:37:59,128:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:15,278:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:15,406:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:15,948:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:15,961:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:16,222:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:16,632:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:17,856:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:18,136:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:19,062:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:19,122:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:25,499:INFO:Calculating mean and std
2024-05-21 11:38:25,504:INFO:Creating metrics dataframe
2024-05-21 11:38:25,508:INFO:Uploading results into container
2024-05-21 11:38:25,509:INFO:Uploading model into container now
2024-05-21 11:38:25,509:INFO:_master_model_container: 22
2024-05-21 11:38:25,509:INFO:_display_container: 4
2024-05-21 11:38:25,526:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1,
                                    n_jobs=-1, n_voters=10, random_state=42,
                                    verbose=False, voting='soft'))],
         verbose=False)
2024-05-21 11:38:25,526:INFO:create_model() successfully completed......................................
2024-05-21 11:38:25,637:INFO:SubProcess create_model() end ==================================
2024-05-21 11:38:25,637:INFO:Creating metrics dataframe
2024-05-21 11:38:25,640:INFO:Initializing custom model Light Gradient Boosting Machine
2024-05-21 11:38:25,640:INFO:Total runtime is 0.6013100981712342 minutes
2024-05-21 11:38:25,642:INFO:SubProcess create_model() called ==================================
2024-05-21 11:38:25,658:INFO:Initializing create_model()
2024-05-21 11:38:25,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:38:25,658:INFO:Checking exceptions
2024-05-21 11:38:25,658:INFO:Importing libraries
2024-05-21 11:38:25,658:INFO:Copying training dataset
2024-05-21 11:38:26,563:INFO:Defining folds
2024-05-21 11:38:26,564:INFO:Declaring metric variables
2024-05-21 11:38:26,565:INFO:Importing untrained model
2024-05-21 11:38:26,565:INFO:Declaring custom model
2024-05-21 11:38:26,573:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-21 11:38:26,575:INFO:Starting cross validation
2024-05-21 11:38:26,586:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:38:28,296:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:28,819:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:29,482:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:29,566:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:29,590:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:38:33,289:INFO:Calculating mean and std
2024-05-21 11:38:33,291:INFO:Creating metrics dataframe
2024-05-21 11:38:33,295:INFO:Uploading results into container
2024-05-21 11:38:33,295:INFO:Uploading model into container now
2024-05-21 11:38:33,296:INFO:_master_model_container: 23
2024-05-21 11:38:33,296:INFO:_display_container: 4
2024-05-21 11:38:33,313:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                colsample_bytree=1.0, feature_fraction=0.4,
                                importance_type='split', learning_rate=0.4,
                                max_depth=-1, min_child_samples=91,
                                min_child_weight=0.001, min_split_gain=0.6,
                                n_estimators=60, n_jobs=-1, num_leaves=30,
                                objective=None, random_state=444,
                                reg_alpha=0.0001, reg_lambda=1e-07, silent=True,
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2024-05-21 11:38:33,313:INFO:create_model() successfully completed......................................
2024-05-21 11:38:33,417:INFO:SubProcess create_model() end ==================================
2024-05-21 11:38:33,418:INFO:Creating metrics dataframe
2024-05-21 11:38:33,422:INFO:Initializing custom model Extreme Gradient Boosting
2024-05-21 11:38:33,422:INFO:Total runtime is 0.7310125350952148 minutes
2024-05-21 11:38:33,424:INFO:SubProcess create_model() called ==================================
2024-05-21 11:38:33,445:INFO:Initializing create_model()
2024-05-21 11:38:33,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:38:33,445:INFO:Checking exceptions
2024-05-21 11:38:33,445:INFO:Importing libraries
2024-05-21 11:38:33,445:INFO:Copying training dataset
2024-05-21 11:38:34,345:INFO:Defining folds
2024-05-21 11:38:34,345:INFO:Declaring metric variables
2024-05-21 11:38:34,347:INFO:Importing untrained model
2024-05-21 11:38:34,347:INFO:Declaring custom model
2024-05-21 11:38:34,355:INFO:Extreme Gradient Boosting Imported successfully
2024-05-21 11:38:34,357:INFO:Starting cross validation
2024-05-21 11:38:34,364:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:38:35,495:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:35,495:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:35,533:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:35,550:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:35,990:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 11:38:36,277:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:36,277:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:36,318:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:36,338:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:36,724:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:36,725:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:36,780:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:36,784:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 11:38:36,797:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:37,089:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:37,089:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:37,136:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:37,153:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:37,223:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 11:38:37,295:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:37,296:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:37,339:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:37,355:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:37,571:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 11:38:37,739:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:427: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(data):

2024-05-21 11:38:44,215:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:44,215:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:44,253:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:44,270:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:44,401:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:44,402:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:44,440:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:44,463:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:44,920:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:44,920:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:44,957:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:44,973:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:45,056:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:45,056:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:45,119:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:45,135:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:45,372:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:45,372:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:45,410:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:45,426:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:45,510:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:45,510:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:45,547:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:45,564:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:45,613:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:45,613:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:45,651:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:45,667:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:45,699:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:45,699:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:45,735:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:45,744:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:45,744:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:45,751:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:45,780:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:45,796:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:45,827:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:299: FutureWarning: is_sparse is deprecated and will be removed in a future version. Check `isinstance(dtype, pd.SparseDtype)` instead.
  if is_sparse(dtype):

2024-05-21 11:38:45,827:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:301: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  elif is_categorical_dtype(dtype) and enable_categorical:

2024-05-21 11:38:45,863:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:332: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  if is_categorical_dtype(dtype)

2024-05-21 11:38:45,878:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/xgboost/data.py:323: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
  return is_int or is_bool or is_float or is_categorical_dtype(dtype)

2024-05-21 11:38:45,969:INFO:Calculating mean and std
2024-05-21 11:38:45,971:INFO:Creating metrics dataframe
2024-05-21 11:38:45,975:INFO:Uploading results into container
2024-05-21 11:38:45,975:INFO:Uploading model into container now
2024-05-21 11:38:45,976:INFO:_master_model_container: 24
2024-05-21 11:38:45,976:INFO:_display_container: 4
2024-05-21 11:38:45,994:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                               grow_policy='depthwise', importance_type=None,
                               interaction_constraints='', learning_rate=0.5,
                               max_bin=256, max_cat_threshold=64,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=2,
                               missing=nan, monotone_constraints='()',
                               n_estimators=50, n_jobs=-1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto', ...))],
         verbose=False)
2024-05-21 11:38:45,994:INFO:create_model() successfully completed......................................
2024-05-21 11:38:46,089:INFO:SubProcess create_model() end ==================================
2024-05-21 11:38:46,089:INFO:Creating metrics dataframe
2024-05-21 11:38:46,092:INFO:Initializing custom model Ada Boost Classifier
2024-05-21 11:38:46,092:INFO:Total runtime is 0.942179532845815 minutes
2024-05-21 11:38:46,094:INFO:SubProcess create_model() called ==================================
2024-05-21 11:38:46,110:INFO:Initializing create_model()
2024-05-21 11:38:46,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:38:46,110:INFO:Checking exceptions
2024-05-21 11:38:46,110:INFO:Importing libraries
2024-05-21 11:38:46,110:INFO:Copying training dataset
2024-05-21 11:38:47,010:INFO:Defining folds
2024-05-21 11:38:47,010:INFO:Declaring metric variables
2024-05-21 11:38:47,012:INFO:Importing untrained model
2024-05-21 11:38:47,012:INFO:Declaring custom model
2024-05-21 11:38:47,019:INFO:Ada Boost Classifier Imported successfully
2024-05-21 11:38:47,021:INFO:Starting cross validation
2024-05-21 11:38:47,028:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:38:48,358:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 11:38:48,863:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 11:38:49,280:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 11:38:49,437:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 11:38:49,827:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-05-21 11:39:05,416:INFO:Calculating mean and std
2024-05-21 11:39:05,416:INFO:Creating metrics dataframe
2024-05-21 11:39:05,417:INFO:Uploading results into container
2024-05-21 11:39:05,418:INFO:Uploading model into container now
2024-05-21 11:39:05,418:INFO:_master_model_container: 25
2024-05-21 11:39:05,418:INFO:_display_container: 4
2024-05-21 11:39:05,433:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=444))],
         verbose=False)
2024-05-21 11:39:05,433:INFO:create_model() successfully completed......................................
2024-05-21 11:39:05,507:INFO:SubProcess create_model() end ==================================
2024-05-21 11:39:05,508:INFO:Creating metrics dataframe
2024-05-21 11:39:05,511:INFO:Initializing custom model Gradient Boosting Classifier
2024-05-21 11:39:05,511:INFO:Total runtime is 1.2658293485641479 minutes
2024-05-21 11:39:05,513:INFO:SubProcess create_model() called ==================================
2024-05-21 11:39:05,528:INFO:Initializing create_model()
2024-05-21 11:39:05,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.15, loss='log_loss',
                                            max_depth=9, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=60,
                                            n_iter_no_change=None,
                                            random_state=444, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:39:05,528:INFO:Checking exceptions
2024-05-21 11:39:05,528:INFO:Importing libraries
2024-05-21 11:39:05,528:INFO:Copying training dataset
2024-05-21 11:39:06,392:INFO:Defining folds
2024-05-21 11:39:06,392:INFO:Declaring metric variables
2024-05-21 11:39:06,394:INFO:Importing untrained model
2024-05-21 11:39:06,394:INFO:Declaring custom model
2024-05-21 11:39:06,401:INFO:Gradient Boosting Classifier Imported successfully
2024-05-21 11:39:06,403:INFO:Starting cross validation
2024-05-21 11:39:06,409:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:39:11,133:INFO:Calculating mean and std
2024-05-21 11:39:11,135:INFO:Creating metrics dataframe
2024-05-21 11:39:11,138:INFO:Uploading results into container
2024-05-21 11:39:11,139:INFO:Uploading model into container now
2024-05-21 11:39:11,139:INFO:_master_model_container: 26
2024-05-21 11:39:11,140:INFO:_display_container: 4
2024-05-21 11:39:11,156:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.15, loss='log_loss',
                                            max_depth=9, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=9,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=60,
                                            n_iter_no_change=None,
                                            random_state=444, subsample=0.7,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2024-05-21 11:39:11,156:INFO:create_model() successfully completed......................................
2024-05-21 11:39:11,259:INFO:SubProcess create_model() end ==================================
2024-05-21 11:39:11,259:INFO:Creating metrics dataframe
2024-05-21 11:39:11,263:INFO:Initializing custom model Decision Tree Classifier
2024-05-21 11:39:11,263:INFO:Total runtime is 1.361683162053426 minutes
2024-05-21 11:39:11,264:INFO:SubProcess create_model() called ==================================
2024-05-21 11:39:11,279:INFO:Initializing create_model()
2024-05-21 11:39:11,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=444,
                                        splitter='best'))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:39:11,280:INFO:Checking exceptions
2024-05-21 11:39:11,280:INFO:Importing libraries
2024-05-21 11:39:11,280:INFO:Copying training dataset
2024-05-21 11:39:12,190:INFO:Defining folds
2024-05-21 11:39:12,190:INFO:Declaring metric variables
2024-05-21 11:39:12,191:INFO:Importing untrained model
2024-05-21 11:39:12,191:INFO:Declaring custom model
2024-05-21 11:39:12,198:INFO:Decision Tree Classifier Imported successfully
2024-05-21 11:39:12,201:INFO:Starting cross validation
2024-05-21 11:39:12,207:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:39:33,287:INFO:Calculating mean and std
2024-05-21 11:39:33,288:INFO:Creating metrics dataframe
2024-05-21 11:39:33,290:INFO:Uploading results into container
2024-05-21 11:39:33,291:INFO:Uploading model into container now
2024-05-21 11:39:33,291:INFO:_master_model_container: 27
2024-05-21 11:39:33,291:INFO:_display_container: 4
2024-05-21 11:39:33,306:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=444,
                                        splitter='best'))],
         verbose=False)
2024-05-21 11:39:33,306:INFO:create_model() successfully completed......................................
2024-05-21 11:39:33,383:INFO:SubProcess create_model() end ==================================
2024-05-21 11:39:33,383:INFO:Creating metrics dataframe
2024-05-21 11:39:33,387:INFO:Initializing custom model Random Forest Classifier
2024-05-21 11:39:33,387:INFO:Total runtime is 1.7304181814193724 minutes
2024-05-21 11:39:33,388:INFO:SubProcess create_model() called ==================================
2024-05-21 11:39:33,404:INFO:Initializing create_model()
2024-05-21 11:39:33,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:39:33,404:INFO:Checking exceptions
2024-05-21 11:39:33,404:INFO:Importing libraries
2024-05-21 11:39:33,404:INFO:Copying training dataset
2024-05-21 11:39:34,256:INFO:Defining folds
2024-05-21 11:39:34,256:INFO:Declaring metric variables
2024-05-21 11:39:34,258:INFO:Importing untrained model
2024-05-21 11:39:34,258:INFO:Declaring custom model
2024-05-21 11:39:34,265:INFO:Random Forest Classifier Imported successfully
2024-05-21 11:39:34,268:INFO:Starting cross validation
2024-05-21 11:39:34,274:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:39:37,286:INFO:Calculating mean and std
2024-05-21 11:39:37,287:INFO:Creating metrics dataframe
2024-05-21 11:39:37,288:INFO:Uploading results into container
2024-05-21 11:39:37,288:INFO:Uploading model into container now
2024-05-21 11:39:37,289:INFO:_master_model_container: 28
2024-05-21 11:39:37,289:INFO:_display_container: 4
2024-05-21 11:39:37,306:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight='balanced',
                                        criterion='gini', max_depth=10,
                                        max_features='log2',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.005,
                                        min_samples_leaf=3, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=110,
                                        n_jobs=-1, oob_score=False,
                                        random_state=444, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-21 11:39:37,307:INFO:create_model() successfully completed......................................
2024-05-21 11:39:37,418:INFO:SubProcess create_model() end ==================================
2024-05-21 11:39:37,418:INFO:Creating metrics dataframe
2024-05-21 11:39:37,423:INFO:Initializing custom model Linear Discriminant Analysis
2024-05-21 11:39:37,423:INFO:Total runtime is 1.7976880987485249 minutes
2024-05-21 11:39:37,425:INFO:SubProcess create_model() called ==================================
2024-05-21 11:39:37,441:INFO:Initializing create_model()
2024-05-21 11:39:37,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:39:37,441:INFO:Checking exceptions
2024-05-21 11:39:37,441:INFO:Importing libraries
2024-05-21 11:39:37,441:INFO:Copying training dataset
2024-05-21 11:39:38,411:INFO:Defining folds
2024-05-21 11:39:38,411:INFO:Declaring metric variables
2024-05-21 11:39:38,413:INFO:Importing untrained model
2024-05-21 11:39:38,413:INFO:Declaring custom model
2024-05-21 11:39:38,420:INFO:Linear Discriminant Analysis Imported successfully
2024-05-21 11:39:38,422:INFO:Starting cross validation
2024-05-21 11:39:38,429:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:40:08,675:INFO:Calculating mean and std
2024-05-21 11:40:08,677:INFO:Creating metrics dataframe
2024-05-21 11:40:08,680:INFO:Uploading results into container
2024-05-21 11:40:08,681:INFO:Uploading model into container now
2024-05-21 11:40:08,681:INFO:_master_model_container: 29
2024-05-21 11:40:08,681:INFO:_display_container: 4
2024-05-21 11:40:08,697:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=1, solver='lsqr',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2024-05-21 11:40:08,697:INFO:create_model() successfully completed......................................
2024-05-21 11:40:08,802:INFO:SubProcess create_model() end ==================================
2024-05-21 11:40:08,802:INFO:Creating metrics dataframe
2024-05-21 11:40:08,806:INFO:Initializing custom model Logistic Regression
2024-05-21 11:40:08,806:INFO:Total runtime is 2.3207396507263183 minutes
2024-05-21 11:40:08,808:INFO:SubProcess create_model() called ==================================
2024-05-21 11:40:08,824:INFO:Initializing create_model()
2024-05-21 11:40:08,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:40:08,824:INFO:Checking exceptions
2024-05-21 11:40:08,824:INFO:Importing libraries
2024-05-21 11:40:08,824:INFO:Copying training dataset
2024-05-21 11:40:09,770:INFO:Defining folds
2024-05-21 11:40:09,770:INFO:Declaring metric variables
2024-05-21 11:40:09,771:INFO:Importing untrained model
2024-05-21 11:40:09,772:INFO:Declaring custom model
2024-05-21 11:40:09,778:INFO:Logistic Regression Imported successfully
2024-05-21 11:40:09,781:INFO:Starting cross validation
2024-05-21 11:40:09,787:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:40:15,691:INFO:Calculating mean and std
2024-05-21 11:40:15,692:INFO:Creating metrics dataframe
2024-05-21 11:40:15,694:INFO:Uploading results into container
2024-05-21 11:40:15,694:INFO:Uploading model into container now
2024-05-21 11:40:15,694:INFO:_master_model_container: 30
2024-05-21 11:40:15,695:INFO:_display_container: 4
2024-05-21 11:40:15,710:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.607, class_weight='balanced',
                                    dual=False, fit_intercept=True,
                                    intercept_scaling=1, l1_ratio=None,
                                    max_iter=1000, multi_class='auto',
                                    n_jobs=None, penalty='l2', random_state=444,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-05-21 11:40:15,711:INFO:create_model() successfully completed......................................
2024-05-21 11:40:15,784:INFO:SubProcess create_model() end ==================================
2024-05-21 11:40:15,784:INFO:Creating metrics dataframe
2024-05-21 11:40:15,788:INFO:Initializing custom model Extra Trees Classifier
2024-05-21 11:40:15,789:INFO:Total runtime is 2.4371142466862996 minutes
2024-05-21 11:40:15,790:INFO:SubProcess create_model() called ==================================
2024-05-21 11:40:15,804:INFO:Initializing create_model()
2024-05-21 11:40:15,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:40:15,805:INFO:Checking exceptions
2024-05-21 11:40:15,805:INFO:Importing libraries
2024-05-21 11:40:15,805:INFO:Copying training dataset
2024-05-21 11:40:16,657:INFO:Defining folds
2024-05-21 11:40:16,658:INFO:Declaring metric variables
2024-05-21 11:40:16,660:INFO:Importing untrained model
2024-05-21 11:40:16,660:INFO:Declaring custom model
2024-05-21 11:40:16,667:INFO:Extra Trees Classifier Imported successfully
2024-05-21 11:40:16,669:INFO:Starting cross validation
2024-05-21 11:40:16,676:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:40:19,507:INFO:Calculating mean and std
2024-05-21 11:40:19,508:INFO:Creating metrics dataframe
2024-05-21 11:40:19,509:INFO:Uploading results into container
2024-05-21 11:40:19,509:INFO:Uploading model into container now
2024-05-21 11:40:19,509:INFO:_master_model_container: 31
2024-05-21 11:40:19,509:INFO:_display_container: 4
2024-05-21 11:40:19,526:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 ExtraTreesClassifier(bootstrap=True, ccp_alpha=0.0,
                                      class_weight='balanced', criterion='gini',
                                      max_depth=10, max_features='log2',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.005,
                                      min_samples_leaf=3, min_samples_split=7,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=110,
                                      n_jobs=-1, oob_score=False,
                                      random_state=444, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-05-21 11:40:19,526:INFO:create_model() successfully completed......................................
2024-05-21 11:40:19,626:INFO:SubProcess create_model() end ==================================
2024-05-21 11:40:19,626:INFO:Creating metrics dataframe
2024-05-21 11:40:19,631:INFO:Initializing custom model SVM - Linear Kernel
2024-05-21 11:40:19,631:INFO:Total runtime is 2.5011528650919597 minutes
2024-05-21 11:40:19,633:INFO:SubProcess create_model() called ==================================
2024-05-21 11:40:19,649:INFO:Initializing create_model()
2024-05-21 11:40:19,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1747138b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:40:19,649:INFO:Checking exceptions
2024-05-21 11:40:19,649:INFO:Importing libraries
2024-05-21 11:40:19,649:INFO:Copying training dataset
2024-05-21 11:40:20,586:INFO:Defining folds
2024-05-21 11:40:20,586:INFO:Declaring metric variables
2024-05-21 11:40:20,588:INFO:Importing untrained model
2024-05-21 11:40:20,588:INFO:Declaring custom model
2024-05-21 11:40:20,595:INFO:SVM - Linear Kernel Imported successfully
2024-05-21 11:40:20,598:INFO:Starting cross validation
2024-05-21 11:40:20,604:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 11:40:25,099:INFO:Calculating mean and std
2024-05-21 11:40:25,101:INFO:Creating metrics dataframe
2024-05-21 11:40:25,104:INFO:Uploading results into container
2024-05-21 11:40:25,105:INFO:Uploading model into container now
2024-05-21 11:40:25,105:INFO:_master_model_container: 32
2024-05-21 11:40:25,106:INFO:_display_container: 4
2024-05-21 11:40:25,124:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.2,
                               fit_intercept=True, l1_ratio=0.7300000001,
                               learning_rate='constant', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=444, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)
2024-05-21 11:40:25,124:INFO:create_model() successfully completed......................................
2024-05-21 11:40:25,202:INFO:SubProcess create_model() end ==================================
2024-05-21 11:40:25,202:INFO:Creating metrics dataframe
2024-05-21 11:40:25,207:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-05-21 11:40:25,226:INFO:Initializing create_model()
2024-05-21 11:40:25,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x157dff6d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1,
                                    n_jobs=-1, n_voters=10, random_state=42,
                                    verbose=False, voting='soft'))],
         verbose=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 11:40:25,226:INFO:Checking exceptions
2024-05-21 11:40:25,227:INFO:Importing libraries
2024-05-21 11:40:25,227:INFO:Copying training dataset
2024-05-21 11:40:26,193:INFO:Defining folds
2024-05-21 11:40:26,193:INFO:Declaring metric variables
2024-05-21 11:40:26,194:INFO:Importing untrained model
2024-05-21 11:40:26,194:INFO:Declaring custom model
2024-05-21 11:40:26,199:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 11:40:26,205:INFO:Cross validation set to False
2024-05-21 11:40:26,205:INFO:Fitting Model
2024-05-21 11:40:27,415:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:27,514:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:27,691:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:27,776:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:27,992:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:28,239:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:28,513:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:28,530:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:33,248:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:33,329:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/lightgbm/sklearn.py:598: UserWarning: 'silent' argument is deprecated and will be removed in a future release of LightGBM. Pass 'verbose' parameter via keyword arguments instead.
  _log_warning("'silent' argument is deprecated and will be removed in a future release of LightGBM. "

2024-05-21 11:40:36,280:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1,
                                    n_jobs=-1, n_voters=10, random_state=42,
                                    verbose=False, voting='soft'))],
         verbose=False)
2024-05-21 11:40:36,281:INFO:create_model() successfully completed......................................
2024-05-21 11:40:36,368:INFO:_master_model_container: 32
2024-05-21 11:40:36,368:INFO:_display_container: 4
2024-05-21 11:40:36,383:INFO:Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1,
                                    n_jobs=-1, n_voters=10, random_state=42,
                                    verbose=False, voting='soft'))],
         verbose=False)
2024-05-21 11:40:36,384:INFO:compare_models() successfully completed......................................
2024-05-21 12:24:47,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 12:24:47,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 12:24:47,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 12:24:47,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 12:24:57,717:INFO:PyCaret ClassificationExperiment
2024-05-21 12:24:57,717:INFO:Logging name: clf-default-name
2024-05-21 12:24:57,717:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-21 12:24:57,717:INFO:version 3.3.2
2024-05-21 12:24:57,717:INFO:Initializing setup()
2024-05-21 12:24:57,717:INFO:self.USI: 6937
2024-05-21 12:24:57,717:INFO:self._variable_keys: {'log_plots_param', 'data', 'memory', 'fold_shuffle_param', 'html_param', 'logging_param', 'exp_name_log', 'fold_groups_param', 'y_train', 'fix_imbalance', 'seed', 'X', 'gpu_param', 'target_param', 'USI', 'fold_generator', 'X_test', 'pipeline', '_available_plots', 'is_multiclass', 'n_jobs_param', '_ml_usecase', 'y', 'y_test', 'idx', 'exp_id', 'X_train', 'gpu_n_jobs_param'}
2024-05-21 12:24:57,717:INFO:Checking environment
2024-05-21 12:24:57,718:INFO:python_version: 3.10.13
2024-05-21 12:24:57,718:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-21 12:24:57,718:INFO:machine: arm64
2024-05-21 12:24:57,718:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-21 12:24:57,718:INFO:Memory: svmem(total=17179869184, available=6327910400, percent=63.2, used=7412269056, free=685883392, active=5650759680, inactive=5638569984, wired=1761509376)
2024-05-21 12:24:57,718:INFO:Physical Core: 8
2024-05-21 12:24:57,718:INFO:Logical Core: 8
2024-05-21 12:24:57,718:INFO:Checking libraries
2024-05-21 12:24:57,718:INFO:System:
2024-05-21 12:24:57,718:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-21 12:24:57,718:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-21 12:24:57,718:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-21 12:24:57,718:INFO:PyCaret required dependencies:
2024-05-21 12:24:57,719:INFO:                 pip: 23.3.2
2024-05-21 12:24:57,719:INFO:          setuptools: 69.0.3
2024-05-21 12:24:57,719:INFO:             pycaret: 3.3.2
2024-05-21 12:24:57,719:INFO:             IPython: 8.20.0
2024-05-21 12:24:57,719:INFO:          ipywidgets: 8.1.1
2024-05-21 12:24:57,719:INFO:                tqdm: 4.66.1
2024-05-21 12:24:57,720:INFO:               numpy: 1.26.4
2024-05-21 12:24:57,720:INFO:              pandas: 2.1.3
2024-05-21 12:24:57,720:INFO:              jinja2: 3.1.3
2024-05-21 12:24:57,720:INFO:               scipy: 1.10.1
2024-05-21 12:24:57,720:INFO:              joblib: 1.3.2
2024-05-21 12:24:57,720:INFO:             sklearn: 1.4.2
2024-05-21 12:24:57,720:INFO:                pyod: 1.1.3
2024-05-21 12:24:57,720:INFO:            imblearn: 0.12.2
2024-05-21 12:24:57,720:INFO:   category_encoders: 2.6.3
2024-05-21 12:24:57,720:INFO:            lightgbm: 3.3.5
2024-05-21 12:24:57,720:INFO:               numba: 0.59.1
2024-05-21 12:24:57,720:INFO:            requests: 2.31.0
2024-05-21 12:24:57,720:INFO:          matplotlib: 3.6.0
2024-05-21 12:24:57,720:INFO:          scikitplot: 0.3.7
2024-05-21 12:24:57,720:INFO:         yellowbrick: 1.5
2024-05-21 12:24:57,720:INFO:              plotly: 5.18.0
2024-05-21 12:24:57,720:INFO:    plotly-resampler: Not installed
2024-05-21 12:24:57,720:INFO:             kaleido: 0.2.1
2024-05-21 12:24:57,720:INFO:           schemdraw: 0.15
2024-05-21 12:24:57,720:INFO:         statsmodels: 0.14.1
2024-05-21 12:24:57,720:INFO:              sktime: 0.26.0
2024-05-21 12:24:57,720:INFO:               tbats: 1.1.3
2024-05-21 12:24:57,720:INFO:            pmdarima: 2.0.4
2024-05-21 12:24:57,720:INFO:              psutil: 5.9.4
2024-05-21 12:24:57,720:INFO:          markupsafe: 2.1.3
2024-05-21 12:24:57,720:INFO:             pickle5: Not installed
2024-05-21 12:24:57,720:INFO:         cloudpickle: 2.2.1
2024-05-21 12:24:57,720:INFO:         deprecation: 2.1.0
2024-05-21 12:24:57,720:INFO:              xxhash: 3.4.1
2024-05-21 12:24:57,720:INFO:           wurlitzer: 3.1.0
2024-05-21 12:24:57,720:INFO:PyCaret optional dependencies:
2024-05-21 12:24:57,731:INFO:                shap: Not installed
2024-05-21 12:24:57,731:INFO:           interpret: Not installed
2024-05-21 12:24:57,731:INFO:                umap: Not installed
2024-05-21 12:24:57,731:INFO:     ydata_profiling: Not installed
2024-05-21 12:24:57,731:INFO:  explainerdashboard: Not installed
2024-05-21 12:24:57,731:INFO:             autoviz: Not installed
2024-05-21 12:24:57,731:INFO:           fairlearn: Not installed
2024-05-21 12:24:57,731:INFO:          deepchecks: Not installed
2024-05-21 12:24:57,731:INFO:             xgboost: 1.7.1
2024-05-21 12:24:57,731:INFO:            catboost: Not installed
2024-05-21 12:24:57,731:INFO:              kmodes: Not installed
2024-05-21 12:24:57,731:INFO:             mlxtend: Not installed
2024-05-21 12:24:57,731:INFO:       statsforecast: Not installed
2024-05-21 12:24:57,731:INFO:        tune_sklearn: Not installed
2024-05-21 12:24:57,731:INFO:                 ray: Not installed
2024-05-21 12:24:57,731:INFO:            hyperopt: Not installed
2024-05-21 12:24:57,731:INFO:              optuna: Not installed
2024-05-21 12:24:57,731:INFO:               skopt: Not installed
2024-05-21 12:24:57,731:INFO:              mlflow: Not installed
2024-05-21 12:24:57,731:INFO:              gradio: Not installed
2024-05-21 12:24:57,731:INFO:             fastapi: Not installed
2024-05-21 12:24:57,731:INFO:             uvicorn: Not installed
2024-05-21 12:24:57,731:INFO:              m2cgen: Not installed
2024-05-21 12:24:57,731:INFO:           evidently: Not installed
2024-05-21 12:24:57,731:INFO:               fugue: Not installed
2024-05-21 12:24:57,731:INFO:           streamlit: Not installed
2024-05-21 12:24:57,731:INFO:             prophet: Not installed
2024-05-21 12:24:57,731:INFO:None
2024-05-21 12:24:57,731:INFO:Set up data.
2024-05-21 12:24:58,374:INFO:Set up folding strategy.
2024-05-21 12:24:58,375:INFO:Set up train/test split.
2024-05-21 12:24:58,982:INFO:Set up index.
2024-05-21 12:24:58,999:INFO:Assigning column types.
2024-05-21 12:24:59,668:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 12:24:59,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 12:24:59,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 12:24:59,701:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 12:24:59,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 12:24:59,944:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 12:24:59,944:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 12:24:59,955:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 12:24:59,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 12:24:59,956:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 12:24:59,973:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 12:24:59,984:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 12:24:59,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 12:25:00,002:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 12:25:00,012:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 12:25:00,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 12:25:00,014:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-21 12:25:00,041:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 12:25:00,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 12:25:00,070:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 12:25:00,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 12:25:00,073:INFO:Preparing preprocessing pipeline...
2024-05-21 12:25:00,153:INFO:Set up simple imputation.
2024-05-21 12:25:00,231:INFO:Set up column name cleaning.
2024-05-21 12:25:01,444:INFO:Finished creating preprocessing pipeline.
2024-05-21 12:25:01,460:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-21 12:25:01,460:INFO:Creating final display dataframe.
2024-05-21 12:25:04,718:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape     (12927, 3460)
4        Transformed data shape     (12927, 3460)
5   Transformed train set shape      (9048, 3460)
6    Transformed test set shape      (3879, 3460)
7              Numeric features              3459
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              6937
2024-05-21 12:25:04,750:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 12:25:04,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 12:25:04,788:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 12:25:04,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 12:25:04,790:INFO:setup() successfully completed in 7.08s...............
2024-05-21 12:25:24,469:INFO:Initializing create_model()
2024-05-21 12:25:24,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 12:25:24,469:INFO:Checking exceptions
2024-05-21 12:25:24,477:INFO:Importing libraries
2024-05-21 12:25:24,478:INFO:Copying training dataset
2024-05-21 12:25:25,365:INFO:Defining folds
2024-05-21 12:25:25,365:INFO:Declaring metric variables
2024-05-21 12:25:25,366:INFO:Importing untrained model
2024-05-21 12:25:25,366:INFO:Declaring custom model
2024-05-21 12:25:25,368:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 12:25:25,370:INFO:Starting cross validation
2024-05-21 12:25:25,376:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 12:26:01,484:INFO:Calculating mean and std
2024-05-21 12:26:01,487:INFO:Creating metrics dataframe
2024-05-21 12:26:01,494:INFO:Finalizing model
2024-05-21 12:26:10,383:INFO:Uploading results into container
2024-05-21 12:26:10,384:INFO:Uploading model into container now
2024-05-21 12:26:10,390:INFO:_master_model_container: 1
2024-05-21 12:26:10,390:INFO:_display_container: 2
2024-05-21 12:26:10,390:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 12:26:10,390:INFO:create_model() successfully completed......................................
2024-05-21 12:26:10,467:INFO:Initializing tune_model()
2024-05-21 12:26:10,467:INFO:tune_model(estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, n_iter=10, custom_grid={'n_voters': [4, 6, 8, 10, 12, 14, 16], 'boosting_type': ['gbdt', 'dart'], 'learning_rate': [0.1, 0.3, 0.5]}, optimize=BA, custom_scorer=None, search_library=scikit-learn, search_algorithm=grid, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>)
2024-05-21 12:26:10,467:INFO:Checking exceptions
2024-05-21 12:26:11,067:INFO:Copying training dataset
2024-05-21 12:26:11,670:INFO:Checking base model
2024-05-21 12:26:11,670:INFO:A custom model has been passed
2024-05-21 12:26:11,670:INFO:Base model : VotingEnsembleLGBM
2024-05-21 12:26:11,672:INFO:Declaring metric variables
2024-05-21 12:26:11,673:INFO:Defining Hyperparameters
2024-05-21 12:26:11,723:INFO:custom_grid: {'actual_estimator__n_voters': [4, 6, 8, 10, 12, 14, 16], 'actual_estimator__boosting_type': ['gbdt', 'dart'], 'actual_estimator__learning_rate': [0.1, 0.3, 0.5]}
2024-05-21 12:26:11,723:INFO:Tuning with n_jobs=-1
2024-05-21 12:26:11,723:INFO:Initializing GridSearchCV
2024-05-21 12:26:50,635:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/externals/loky/process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2024-05-21 12:50:34,266:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:547: FitFailedWarning: 
90 fits failed out of a total of 210.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
90 fits failed with the following error:
joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/_parallel_backends.py", line 273, in _wrap_func_call
    return func()
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/HELPpy/models/prediction.py", line 84, in _fit_single_estimator
    clf = clone(self.estimators_[i])
IndexError: list index out of range
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/HELPpy/models/prediction.py", line 122, in fit
    self.estimators_ = Parallel(n_jobs=self.n_jobs)(delayed(self._fit_single_estimator)(i,X, y, index_ne, index_e)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 754, in _return_or_raise
    raise self._result
IndexError: list index out of range

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-05-21 12:50:34,271:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/model_selection/_search.py:1051: UserWarning: One or more of the test scores are non-finite: [0.83849051 0.8670999  0.87566274 0.88165878        nan        nan
        nan 0.83849051 0.8670999  0.87566274 0.88165878        nan
        nan        nan 0.83849051 0.8670999  0.87566274 0.88165878
        nan        nan        nan 0.83849051 0.8670999  0.87566274
 0.88165878        nan        nan        nan 0.83849051 0.8670999
 0.87566274 0.88165878        nan        nan        nan 0.83849051
 0.8670999  0.87566274 0.88165878        nan        nan        nan]
  warnings.warn(

2024-05-21 12:50:34,273:INFO:best_params: {'actual_estimator__boosting_type': 'gbdt', 'actual_estimator__learning_rate': 0.1, 'actual_estimator__n_voters': 10}
2024-05-21 12:50:34,276:INFO:Hyperparameter search completed
2024-05-21 12:50:34,277:INFO:SubProcess create_model() called ==================================
2024-05-21 12:50:34,279:INFO:Initializing create_model()
2024-05-21 12:50:34,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x175e37370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'boosting_type': 'gbdt', 'learning_rate': 0.1, 'n_voters': 10})
2024-05-21 12:50:34,279:INFO:Checking exceptions
2024-05-21 12:50:34,280:INFO:Importing libraries
2024-05-21 12:50:34,280:INFO:Copying training dataset
2024-05-21 12:50:37,339:INFO:Defining folds
2024-05-21 12:50:37,339:INFO:Declaring metric variables
2024-05-21 12:50:37,359:INFO:Importing untrained model
2024-05-21 12:50:37,360:INFO:Declaring custom model
2024-05-21 12:50:37,366:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 12:50:37,377:INFO:Starting cross validation
2024-05-21 12:50:37,394:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 12:51:11,038:INFO:Calculating mean and std
2024-05-21 12:51:11,040:INFO:Creating metrics dataframe
2024-05-21 12:51:11,047:INFO:Finalizing model
2024-05-21 12:51:20,169:INFO:Uploading results into container
2024-05-21 12:51:20,171:INFO:Uploading model into container now
2024-05-21 12:51:20,171:INFO:_master_model_container: 2
2024-05-21 12:51:20,171:INFO:_display_container: 3
2024-05-21 12:51:20,172:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 12:51:20,172:INFO:create_model() successfully completed......................................
2024-05-21 12:51:20,254:INFO:SubProcess create_model() end ==================================
2024-05-21 12:51:20,254:INFO:choose_better activated
2024-05-21 12:51:20,255:INFO:SubProcess create_model() called ==================================
2024-05-21 12:51:20,256:INFO:Initializing create_model()
2024-05-21 12:51:20,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 12:51:20,256:INFO:Checking exceptions
2024-05-21 12:51:20,257:INFO:Importing libraries
2024-05-21 12:51:20,257:INFO:Copying training dataset
2024-05-21 12:51:21,232:INFO:Defining folds
2024-05-21 12:51:21,232:INFO:Declaring metric variables
2024-05-21 12:51:21,232:INFO:Importing untrained model
2024-05-21 12:51:21,232:INFO:Declaring custom model
2024-05-21 12:51:21,232:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 12:51:21,232:INFO:Starting cross validation
2024-05-21 12:51:21,238:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 12:51:52,816:INFO:Calculating mean and std
2024-05-21 12:51:52,817:INFO:Creating metrics dataframe
2024-05-21 12:51:52,820:INFO:Finalizing model
2024-05-21 12:52:01,576:INFO:Uploading results into container
2024-05-21 12:52:01,578:INFO:Uploading model into container now
2024-05-21 12:52:01,578:INFO:_master_model_container: 3
2024-05-21 12:52:01,578:INFO:_display_container: 4
2024-05-21 12:52:01,578:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 12:52:01,578:INFO:create_model() successfully completed......................................
2024-05-21 12:52:01,644:INFO:SubProcess create_model() end ==================================
2024-05-21 12:52:01,645:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') result for BA is 0.8817
2024-05-21 12:52:01,645:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') result for BA is 0.8817
2024-05-21 12:52:01,645:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') is best model
2024-05-21 12:52:01,645:INFO:choose_better completed
2024-05-21 12:52:01,649:INFO:_master_model_container: 3
2024-05-21 12:52:01,649:INFO:_display_container: 3
2024-05-21 12:52:01,649:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 12:52:01,649:INFO:tune_model() successfully completed......................................
2024-05-21 13:03:20,138:INFO:Initializing create_model()
2024-05-21 13:03:20,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 13:03:20,139:INFO:Checking exceptions
2024-05-21 13:03:20,151:INFO:Importing libraries
2024-05-21 13:03:20,151:INFO:Copying training dataset
2024-05-21 13:03:21,152:INFO:Defining folds
2024-05-21 13:03:21,152:INFO:Declaring metric variables
2024-05-21 13:03:21,154:INFO:Importing untrained model
2024-05-21 13:03:21,154:INFO:Declaring custom model
2024-05-21 13:03:21,156:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:03:21,158:INFO:Starting cross validation
2024-05-21 13:03:21,165:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:03:54,348:INFO:Calculating mean and std
2024-05-21 13:03:54,351:INFO:Creating metrics dataframe
2024-05-21 13:03:54,357:INFO:Finalizing model
2024-05-21 13:04:03,857:INFO:Uploading results into container
2024-05-21 13:04:03,859:INFO:Uploading model into container now
2024-05-21 13:04:03,865:INFO:_master_model_container: 4
2024-05-21 13:04:03,865:INFO:_display_container: 4
2024-05-21 13:04:03,866:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:04:03,866:INFO:create_model() successfully completed......................................
2024-05-21 13:04:03,932:INFO:Initializing tune_model()
2024-05-21 13:04:03,932:INFO:tune_model(estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, n_iter=10, custom_grid={'n_voters': [4, 6, 8, 10, 12, 14, 16], 'boosting_type': ['gbdt', 'dart'], 'learning_rate': [0.1, 0.3, 0.5]}, optimize=BA, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>)
2024-05-21 13:04:03,932:INFO:Checking exceptions
2024-05-21 13:04:04,317:INFO:Copying training dataset
2024-05-21 13:04:04,999:INFO:Checking base model
2024-05-21 13:04:04,999:INFO:A custom model has been passed
2024-05-21 13:04:04,999:INFO:Base model : VotingEnsembleLGBM
2024-05-21 13:04:05,001:INFO:Declaring metric variables
2024-05-21 13:04:05,002:INFO:Defining Hyperparameters
2024-05-21 13:04:05,053:INFO:custom_grid: {'actual_estimator__n_voters': [4, 6, 8, 10, 12, 14, 16], 'actual_estimator__boosting_type': ['gbdt', 'dart'], 'actual_estimator__learning_rate': [0.1, 0.3, 0.5]}
2024-05-21 13:04:05,053:INFO:Tuning with n_jobs=-1
2024-05-21 13:04:05,054:INFO:Initializing RandomizedSearchCV
2024-05-21 13:05:48,212:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/externals/loky/process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2024-05-21 13:09:55,826:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/model_selection/_validation.py:547: FitFailedWarning: 
25 fits failed out of a total of 50.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
25 fits failed with the following error:
joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/_parallel_backends.py", line 273, in _wrap_func_call
    return func()
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 589, in __call__
    return [func(*args, **kwargs)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 589, in <listcomp>
    return [func(*args, **kwargs)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/HELPpy/models/prediction.py", line 84, in _fit_single_estimator
    clf = clone(self.estimators_[i])
IndexError: list index out of range
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/HELPpy/models/prediction.py", line 122, in fit
    self.estimators_ = Parallel(n_jobs=self.n_jobs)(delayed(self._fit_single_estimator)(i,X, y, index_ne, index_e)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/parallel.py", line 754, in _return_or_raise
    raise self._result
IndexError: list index out of range

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-05-21 13:09:55,830:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/model_selection/_search.py:1051: UserWarning: One or more of the test scores are non-finite: [       nan 0.88165878        nan 0.8670999         nan 0.88165878
        nan 0.8670999  0.87566274        nan]
  warnings.warn(

2024-05-21 13:09:55,832:INFO:best_params: {'actual_estimator__n_voters': 10, 'actual_estimator__learning_rate': 0.1, 'actual_estimator__boosting_type': 'gbdt'}
2024-05-21 13:09:55,836:INFO:Hyperparameter search completed
2024-05-21 13:09:55,837:INFO:SubProcess create_model() called ==================================
2024-05-21 13:09:55,839:INFO:Initializing create_model()
2024-05-21 13:09:55,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x177b5c580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_voters': 10, 'learning_rate': 0.1, 'boosting_type': 'gbdt'})
2024-05-21 13:09:55,840:INFO:Checking exceptions
2024-05-21 13:09:55,840:INFO:Importing libraries
2024-05-21 13:09:55,840:INFO:Copying training dataset
2024-05-21 13:09:57,143:INFO:Defining folds
2024-05-21 13:09:57,143:INFO:Declaring metric variables
2024-05-21 13:09:57,147:INFO:Importing untrained model
2024-05-21 13:09:57,147:INFO:Declaring custom model
2024-05-21 13:09:57,151:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:09:57,157:INFO:Starting cross validation
2024-05-21 13:09:57,165:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:10:30,874:INFO:Calculating mean and std
2024-05-21 13:10:30,877:INFO:Creating metrics dataframe
2024-05-21 13:10:30,883:INFO:Finalizing model
2024-05-21 13:10:40,906:INFO:Uploading results into container
2024-05-21 13:10:40,908:INFO:Uploading model into container now
2024-05-21 13:10:40,908:INFO:_master_model_container: 5
2024-05-21 13:10:40,908:INFO:_display_container: 5
2024-05-21 13:10:40,908:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:10:40,909:INFO:create_model() successfully completed......................................
2024-05-21 13:10:40,982:INFO:SubProcess create_model() end ==================================
2024-05-21 13:10:40,982:INFO:choose_better activated
2024-05-21 13:10:40,984:INFO:SubProcess create_model() called ==================================
2024-05-21 13:10:40,984:INFO:Initializing create_model()
2024-05-21 13:10:40,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 13:10:40,984:INFO:Checking exceptions
2024-05-21 13:10:40,985:INFO:Importing libraries
2024-05-21 13:10:40,985:INFO:Copying training dataset
2024-05-21 13:10:41,925:INFO:Defining folds
2024-05-21 13:10:41,925:INFO:Declaring metric variables
2024-05-21 13:10:41,925:INFO:Importing untrained model
2024-05-21 13:10:41,925:INFO:Declaring custom model
2024-05-21 13:10:41,925:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:10:41,925:INFO:Starting cross validation
2024-05-21 13:10:41,931:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:11:19,348:INFO:Calculating mean and std
2024-05-21 13:11:19,349:INFO:Creating metrics dataframe
2024-05-21 13:11:19,352:INFO:Finalizing model
2024-05-21 13:11:28,606:INFO:Uploading results into container
2024-05-21 13:11:28,607:INFO:Uploading model into container now
2024-05-21 13:11:28,607:INFO:_master_model_container: 6
2024-05-21 13:11:28,607:INFO:_display_container: 6
2024-05-21 13:11:28,608:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:11:28,608:INFO:create_model() successfully completed......................................
2024-05-21 13:11:28,679:INFO:SubProcess create_model() end ==================================
2024-05-21 13:11:28,679:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') result for BA is 0.8817
2024-05-21 13:11:28,679:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') result for BA is 0.8817
2024-05-21 13:11:28,679:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') is best model
2024-05-21 13:11:28,679:INFO:choose_better completed
2024-05-21 13:11:28,684:INFO:_master_model_container: 6
2024-05-21 13:11:28,684:INFO:_display_container: 5
2024-05-21 13:11:28,684:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:11:28,684:INFO:tune_model() successfully completed......................................
2024-05-21 13:17:23,114:INFO:Initializing create_model()
2024-05-21 13:17:23,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 13:17:23,115:INFO:Checking exceptions
2024-05-21 13:17:23,124:INFO:Importing libraries
2024-05-21 13:17:23,124:INFO:Copying training dataset
2024-05-21 13:17:24,067:INFO:Defining folds
2024-05-21 13:17:24,067:INFO:Declaring metric variables
2024-05-21 13:17:24,068:INFO:Importing untrained model
2024-05-21 13:17:24,068:INFO:Declaring custom model
2024-05-21 13:17:24,070:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:17:24,073:INFO:Starting cross validation
2024-05-21 13:17:24,079:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:18:00,555:INFO:Calculating mean and std
2024-05-21 13:18:00,557:INFO:Creating metrics dataframe
2024-05-21 13:18:00,564:INFO:Finalizing model
2024-05-21 13:18:09,836:INFO:Uploading results into container
2024-05-21 13:18:09,837:INFO:Uploading model into container now
2024-05-21 13:18:09,842:INFO:_master_model_container: 7
2024-05-21 13:18:09,842:INFO:_display_container: 6
2024-05-21 13:18:09,843:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:18:09,843:INFO:create_model() successfully completed......................................
2024-05-21 13:18:09,904:INFO:Initializing tune_model()
2024-05-21 13:18:09,904:INFO:tune_model(estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, n_iter=10, custom_grid={'n_voters': [4, 6, 8, 10, 12, 14, 16], 'boosting_type': ['gbdt', 'dart'], 'learning_rate': [0.1, 0.3, 0.5]}, optimize=BA, custom_scorer=None, search_library=optuna, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b0ba30>)
2024-05-21 13:18:09,904:INFO:Checking exceptions
2024-05-21 13:18:09,904:ERROR:
'optuna' is a soft dependency and not included in the pycaret installation. Please run: `pip install optuna` to install.
Alternately, you can install this by running `pip install pycaret[tuners]`
NoneType: None
2024-05-21 13:20:50,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 13:20:50,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 13:20:50,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 13:20:50,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 13:20:59,979:INFO:PyCaret ClassificationExperiment
2024-05-21 13:20:59,979:INFO:Logging name: clf-default-name
2024-05-21 13:20:59,979:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-21 13:20:59,979:INFO:version 3.3.2
2024-05-21 13:20:59,979:INFO:Initializing setup()
2024-05-21 13:20:59,979:INFO:self.USI: 631a
2024-05-21 13:20:59,979:INFO:self._variable_keys: {'X', 'data', 'USI', 'log_plots_param', 'exp_name_log', 'seed', 'gpu_param', 'exp_id', 'logging_param', 'y_test', 'fix_imbalance', 'html_param', '_ml_usecase', 'gpu_n_jobs_param', 'X_test', 'X_train', '_available_plots', 'fold_shuffle_param', 'pipeline', 'n_jobs_param', 'is_multiclass', 'fold_groups_param', 'y', 'idx', 'fold_generator', 'memory', 'y_train', 'target_param'}
2024-05-21 13:20:59,979:INFO:Checking environment
2024-05-21 13:20:59,979:INFO:python_version: 3.10.13
2024-05-21 13:20:59,979:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-21 13:20:59,979:INFO:machine: arm64
2024-05-21 13:20:59,979:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-21 13:20:59,979:INFO:Memory: svmem(total=17179869184, available=6006947840, percent=65.0, used=6823641088, free=1042153472, active=4971544576, inactive=4957421568, wired=1852096512)
2024-05-21 13:20:59,979:INFO:Physical Core: 8
2024-05-21 13:20:59,979:INFO:Logical Core: 8
2024-05-21 13:20:59,979:INFO:Checking libraries
2024-05-21 13:20:59,979:INFO:System:
2024-05-21 13:20:59,979:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-21 13:20:59,979:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-21 13:20:59,979:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-21 13:20:59,979:INFO:PyCaret required dependencies:
2024-05-21 13:20:59,980:INFO:                 pip: 23.3.2
2024-05-21 13:20:59,980:INFO:          setuptools: 69.0.3
2024-05-21 13:20:59,980:INFO:             pycaret: 3.3.2
2024-05-21 13:20:59,980:INFO:             IPython: 8.20.0
2024-05-21 13:20:59,980:INFO:          ipywidgets: 8.1.1
2024-05-21 13:20:59,980:INFO:                tqdm: 4.66.1
2024-05-21 13:20:59,980:INFO:               numpy: 1.26.4
2024-05-21 13:20:59,980:INFO:              pandas: 2.1.3
2024-05-21 13:20:59,980:INFO:              jinja2: 3.1.3
2024-05-21 13:20:59,980:INFO:               scipy: 1.10.1
2024-05-21 13:20:59,980:INFO:              joblib: 1.3.2
2024-05-21 13:20:59,980:INFO:             sklearn: 1.4.2
2024-05-21 13:20:59,980:INFO:                pyod: 1.1.3
2024-05-21 13:20:59,980:INFO:            imblearn: 0.12.2
2024-05-21 13:20:59,980:INFO:   category_encoders: 2.6.3
2024-05-21 13:20:59,980:INFO:            lightgbm: 3.3.5
2024-05-21 13:20:59,980:INFO:               numba: 0.59.1
2024-05-21 13:20:59,980:INFO:            requests: 2.31.0
2024-05-21 13:20:59,980:INFO:          matplotlib: 3.6.0
2024-05-21 13:20:59,981:INFO:          scikitplot: 0.3.7
2024-05-21 13:20:59,981:INFO:         yellowbrick: 1.5
2024-05-21 13:20:59,981:INFO:              plotly: 5.18.0
2024-05-21 13:20:59,981:INFO:    plotly-resampler: Not installed
2024-05-21 13:20:59,981:INFO:             kaleido: 0.2.1
2024-05-21 13:20:59,981:INFO:           schemdraw: 0.15
2024-05-21 13:20:59,981:INFO:         statsmodels: 0.14.1
2024-05-21 13:20:59,981:INFO:              sktime: 0.26.0
2024-05-21 13:20:59,981:INFO:               tbats: 1.1.3
2024-05-21 13:20:59,981:INFO:            pmdarima: 2.0.4
2024-05-21 13:20:59,981:INFO:              psutil: 5.9.4
2024-05-21 13:20:59,981:INFO:          markupsafe: 2.1.3
2024-05-21 13:20:59,981:INFO:             pickle5: Not installed
2024-05-21 13:20:59,981:INFO:         cloudpickle: 2.2.1
2024-05-21 13:20:59,981:INFO:         deprecation: 2.1.0
2024-05-21 13:20:59,981:INFO:              xxhash: 3.4.1
2024-05-21 13:20:59,981:INFO:           wurlitzer: 3.1.0
2024-05-21 13:20:59,981:INFO:PyCaret optional dependencies:
2024-05-21 13:20:59,988:INFO:                shap: Not installed
2024-05-21 13:20:59,988:INFO:           interpret: Not installed
2024-05-21 13:20:59,988:INFO:                umap: Not installed
2024-05-21 13:20:59,988:INFO:     ydata_profiling: Not installed
2024-05-21 13:20:59,988:INFO:  explainerdashboard: Not installed
2024-05-21 13:20:59,988:INFO:             autoviz: Not installed
2024-05-21 13:20:59,988:INFO:           fairlearn: Not installed
2024-05-21 13:20:59,988:INFO:          deepchecks: Not installed
2024-05-21 13:20:59,988:INFO:             xgboost: 1.7.1
2024-05-21 13:20:59,988:INFO:            catboost: Not installed
2024-05-21 13:20:59,988:INFO:              kmodes: Not installed
2024-05-21 13:20:59,988:INFO:             mlxtend: Not installed
2024-05-21 13:20:59,988:INFO:       statsforecast: Not installed
2024-05-21 13:20:59,988:INFO:        tune_sklearn: Not installed
2024-05-21 13:20:59,988:INFO:                 ray: Not installed
2024-05-21 13:20:59,988:INFO:            hyperopt: Not installed
2024-05-21 13:20:59,988:INFO:              optuna: 3.6.1
2024-05-21 13:20:59,988:INFO:               skopt: Not installed
2024-05-21 13:20:59,988:INFO:              mlflow: Not installed
2024-05-21 13:20:59,988:INFO:              gradio: Not installed
2024-05-21 13:20:59,988:INFO:             fastapi: Not installed
2024-05-21 13:20:59,988:INFO:             uvicorn: Not installed
2024-05-21 13:20:59,988:INFO:              m2cgen: Not installed
2024-05-21 13:20:59,988:INFO:           evidently: Not installed
2024-05-21 13:20:59,988:INFO:               fugue: Not installed
2024-05-21 13:20:59,988:INFO:           streamlit: Not installed
2024-05-21 13:20:59,988:INFO:             prophet: Not installed
2024-05-21 13:20:59,988:INFO:None
2024-05-21 13:20:59,988:INFO:Set up data.
2024-05-21 13:21:00,568:INFO:Set up folding strategy.
2024-05-21 13:21:00,568:INFO:Set up train/test split.
2024-05-21 13:21:01,211:INFO:Set up index.
2024-05-21 13:21:01,228:INFO:Assigning column types.
2024-05-21 13:21:01,901:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 13:21:01,920:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 13:21:01,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:21:01,937:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:21:02,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:21:02,182:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 13:21:02,182:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:21:02,193:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:21:02,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:21:02,194:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 13:21:02,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:21:02,223:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:21:02,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:21:02,242:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:21:02,252:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:21:02,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:21:02,253:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-21 13:21:02,281:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:21:02,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:21:02,311:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:21:02,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:21:02,312:INFO:Preparing preprocessing pipeline...
2024-05-21 13:21:02,390:INFO:Set up simple imputation.
2024-05-21 13:21:02,467:INFO:Set up column name cleaning.
2024-05-21 13:21:03,712:INFO:Finished creating preprocessing pipeline.
2024-05-21 13:21:03,728:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-21 13:21:03,728:INFO:Creating final display dataframe.
2024-05-21 13:21:07,061:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape     (12927, 3460)
4        Transformed data shape     (12927, 3460)
5   Transformed train set shape      (9048, 3460)
6    Transformed test set shape      (3879, 3460)
7              Numeric features              3459
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              631a
2024-05-21 13:21:07,096:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:21:07,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:21:07,127:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:21:07,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:21:07,129:INFO:setup() successfully completed in 7.15s...............
2024-05-21 13:21:23,055:INFO:Initializing create_model()
2024-05-21 13:21:23,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1773efc70>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 13:21:23,056:INFO:Checking exceptions
2024-05-21 13:21:23,063:INFO:Importing libraries
2024-05-21 13:21:23,063:INFO:Copying training dataset
2024-05-21 13:21:24,019:INFO:Defining folds
2024-05-21 13:21:24,019:INFO:Declaring metric variables
2024-05-21 13:21:24,021:INFO:Importing untrained model
2024-05-21 13:21:24,021:INFO:Declaring custom model
2024-05-21 13:21:24,023:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:21:24,025:INFO:Starting cross validation
2024-05-21 13:21:24,031:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:21:59,753:INFO:Calculating mean and std
2024-05-21 13:21:59,756:INFO:Creating metrics dataframe
2024-05-21 13:21:59,762:INFO:Finalizing model
2024-05-21 13:22:08,998:INFO:Uploading results into container
2024-05-21 13:22:09,000:INFO:Uploading model into container now
2024-05-21 13:22:09,006:INFO:_master_model_container: 1
2024-05-21 13:22:09,006:INFO:_display_container: 2
2024-05-21 13:22:09,006:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:22:09,006:INFO:create_model() successfully completed......................................
2024-05-21 13:22:09,091:INFO:Initializing tune_model()
2024-05-21 13:22:09,091:INFO:tune_model(estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, n_iter=10, custom_grid={'n_voters': [4, 6, 8, 10, 12, 14, 16], 'boosting_type': ['gbdt', 'dart'], 'learning_rate': [0.1, 0.3, 0.5]}, optimize=BA, custom_scorer=None, search_library=optuna, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x1773efc70>)
2024-05-21 13:22:09,091:INFO:Checking exceptions
2024-05-21 13:22:09,091:INFO:Soft dependency imported: optuna: 3.6.1
2024-05-21 13:22:09,688:INFO:Copying training dataset
2024-05-21 13:22:10,303:INFO:Checking base model
2024-05-21 13:22:10,304:INFO:A custom model has been passed
2024-05-21 13:22:10,304:INFO:Base model : VotingEnsembleLGBM
2024-05-21 13:22:10,305:INFO:Declaring metric variables
2024-05-21 13:22:10,307:INFO:Defining Hyperparameters
2024-05-21 13:22:10,362:INFO:custom_grid: {'actual_estimator__n_voters': CategoricalDistribution(values=[4, 6, 8, 10, 12, 14, 16]), 'actual_estimator__boosting_type': CategoricalDistribution(values=['gbdt', 'dart']), 'actual_estimator__learning_rate': CategoricalDistribution(values=[0.1, 0.3, 0.5])}
2024-05-21 13:22:10,363:INFO:Tuning with n_jobs=-1
2024-05-21 13:22:10,364:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna/samplers/_tpe/sampler.py:319: ExperimentalWarning: ``multivariate`` option is an experimental feature. The interface can change in the future.
  warnings.warn(

2024-05-21 13:22:10,365:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna/samplers/_tpe/sampler.py:338: ExperimentalWarning: ``constant_liar`` option is an experimental feature. The interface can change in the future.
  warnings.warn(

2024-05-21 13:22:10,365:INFO:Initializing optuna.integration.OptunaSearchCV
2024-05-21 13:28:36,936:INFO:PyCaret ClassificationExperiment
2024-05-21 13:28:36,936:INFO:Logging name: clf-default-name
2024-05-21 13:28:36,936:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-21 13:28:36,936:INFO:version 3.3.2
2024-05-21 13:28:36,936:INFO:Initializing setup()
2024-05-21 13:28:36,936:INFO:self.USI: 17ef
2024-05-21 13:28:36,936:INFO:self._variable_keys: {'X', 'data', 'USI', 'log_plots_param', 'exp_name_log', 'seed', 'gpu_param', 'exp_id', 'logging_param', 'y_test', 'fix_imbalance', 'html_param', '_ml_usecase', 'gpu_n_jobs_param', 'X_test', 'X_train', '_available_plots', 'fold_shuffle_param', 'pipeline', 'n_jobs_param', 'is_multiclass', 'fold_groups_param', 'y', 'idx', 'fold_generator', 'memory', 'y_train', 'target_param'}
2024-05-21 13:28:36,936:INFO:Checking environment
2024-05-21 13:28:36,936:INFO:python_version: 3.10.13
2024-05-21 13:28:36,936:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-21 13:28:36,936:INFO:machine: arm64
2024-05-21 13:28:36,936:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-21 13:28:36,936:INFO:Memory: svmem(total=17179869184, available=6048628736, percent=64.8, used=6727385088, free=1044185088, active=5016813568, inactive=4998463488, wired=1710571520)
2024-05-21 13:28:36,936:INFO:Physical Core: 8
2024-05-21 13:28:36,936:INFO:Logical Core: 8
2024-05-21 13:28:36,936:INFO:Checking libraries
2024-05-21 13:28:36,936:INFO:System:
2024-05-21 13:28:36,936:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-21 13:28:36,936:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-21 13:28:36,936:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-21 13:28:36,936:INFO:PyCaret required dependencies:
2024-05-21 13:28:36,936:INFO:                 pip: 23.3.2
2024-05-21 13:28:36,936:INFO:          setuptools: 69.0.3
2024-05-21 13:28:36,936:INFO:             pycaret: 3.3.2
2024-05-21 13:28:36,936:INFO:             IPython: 8.20.0
2024-05-21 13:28:36,936:INFO:          ipywidgets: 8.1.1
2024-05-21 13:28:36,937:INFO:                tqdm: 4.66.1
2024-05-21 13:28:36,937:INFO:               numpy: 1.26.4
2024-05-21 13:28:36,937:INFO:              pandas: 2.1.3
2024-05-21 13:28:36,937:INFO:              jinja2: 3.1.3
2024-05-21 13:28:36,937:INFO:               scipy: 1.10.1
2024-05-21 13:28:36,937:INFO:              joblib: 1.3.2
2024-05-21 13:28:36,937:INFO:             sklearn: 1.4.2
2024-05-21 13:28:36,937:INFO:                pyod: 1.1.3
2024-05-21 13:28:36,937:INFO:            imblearn: 0.12.2
2024-05-21 13:28:36,937:INFO:   category_encoders: 2.6.3
2024-05-21 13:28:36,937:INFO:            lightgbm: 3.3.5
2024-05-21 13:28:36,937:INFO:               numba: 0.59.1
2024-05-21 13:28:36,937:INFO:            requests: 2.31.0
2024-05-21 13:28:36,937:INFO:          matplotlib: 3.6.0
2024-05-21 13:28:36,937:INFO:          scikitplot: 0.3.7
2024-05-21 13:28:36,937:INFO:         yellowbrick: 1.5
2024-05-21 13:28:36,937:INFO:              plotly: 5.18.0
2024-05-21 13:28:36,937:INFO:    plotly-resampler: Not installed
2024-05-21 13:28:36,937:INFO:             kaleido: 0.2.1
2024-05-21 13:28:36,937:INFO:           schemdraw: 0.15
2024-05-21 13:28:36,937:INFO:         statsmodels: 0.14.1
2024-05-21 13:28:36,937:INFO:              sktime: 0.26.0
2024-05-21 13:28:36,937:INFO:               tbats: 1.1.3
2024-05-21 13:28:36,937:INFO:            pmdarima: 2.0.4
2024-05-21 13:28:36,937:INFO:              psutil: 5.9.4
2024-05-21 13:28:36,937:INFO:          markupsafe: 2.1.3
2024-05-21 13:28:36,937:INFO:             pickle5: Not installed
2024-05-21 13:28:36,937:INFO:         cloudpickle: 2.2.1
2024-05-21 13:28:36,937:INFO:         deprecation: 2.1.0
2024-05-21 13:28:36,937:INFO:              xxhash: 3.4.1
2024-05-21 13:28:36,937:INFO:           wurlitzer: 3.1.0
2024-05-21 13:28:36,937:INFO:PyCaret optional dependencies:
2024-05-21 13:28:36,937:INFO:                shap: Not installed
2024-05-21 13:28:36,937:INFO:           interpret: Not installed
2024-05-21 13:28:36,937:INFO:                umap: Not installed
2024-05-21 13:28:36,937:INFO:     ydata_profiling: Not installed
2024-05-21 13:28:36,937:INFO:  explainerdashboard: Not installed
2024-05-21 13:28:36,937:INFO:             autoviz: Not installed
2024-05-21 13:28:36,937:INFO:           fairlearn: Not installed
2024-05-21 13:28:36,937:INFO:          deepchecks: Not installed
2024-05-21 13:28:36,937:INFO:             xgboost: 1.7.1
2024-05-21 13:28:36,937:INFO:            catboost: Not installed
2024-05-21 13:28:36,937:INFO:              kmodes: Not installed
2024-05-21 13:28:36,937:INFO:             mlxtend: Not installed
2024-05-21 13:28:36,937:INFO:       statsforecast: Not installed
2024-05-21 13:28:36,937:INFO:        tune_sklearn: Not installed
2024-05-21 13:28:36,937:INFO:                 ray: Not installed
2024-05-21 13:28:36,937:INFO:            hyperopt: Not installed
2024-05-21 13:28:36,937:INFO:              optuna: 3.6.1
2024-05-21 13:28:36,937:INFO:               skopt: Not installed
2024-05-21 13:28:36,937:INFO:              mlflow: Not installed
2024-05-21 13:28:36,937:INFO:              gradio: Not installed
2024-05-21 13:28:36,937:INFO:             fastapi: Not installed
2024-05-21 13:28:36,937:INFO:             uvicorn: Not installed
2024-05-21 13:28:36,937:INFO:              m2cgen: Not installed
2024-05-21 13:28:36,937:INFO:           evidently: Not installed
2024-05-21 13:28:36,937:INFO:               fugue: Not installed
2024-05-21 13:28:36,937:INFO:           streamlit: Not installed
2024-05-21 13:28:36,937:INFO:             prophet: Not installed
2024-05-21 13:28:36,937:INFO:None
2024-05-21 13:28:36,937:INFO:Set up data.
2024-05-21 13:28:37,511:INFO:Set up folding strategy.
2024-05-21 13:28:37,511:INFO:Set up train/test split.
2024-05-21 13:28:38,110:INFO:Set up index.
2024-05-21 13:28:38,126:INFO:Assigning column types.
2024-05-21 13:28:38,844:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 13:28:38,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 13:28:38,862:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:28:38,873:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:28:38,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:28:38,891:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 13:28:38,892:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:28:38,903:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:28:38,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:28:38,904:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 13:28:38,921:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:28:38,931:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:28:38,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:28:38,950:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:28:38,960:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:28:38,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:28:38,961:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-21 13:28:38,990:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:28:38,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:28:39,019:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:28:39,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:28:39,020:INFO:Preparing preprocessing pipeline...
2024-05-21 13:28:39,100:INFO:Set up simple imputation.
2024-05-21 13:28:39,239:INFO:Set up column name cleaning.
2024-05-21 13:28:40,402:INFO:Finished creating preprocessing pipeline.
2024-05-21 13:28:40,416:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-21 13:28:40,416:INFO:Creating final display dataframe.
2024-05-21 13:28:43,690:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape     (12927, 3460)
4        Transformed data shape     (12927, 3460)
5   Transformed train set shape      (9048, 3460)
6    Transformed test set shape      (3879, 3460)
7              Numeric features              3459
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              17ef
2024-05-21 13:28:43,723:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:28:43,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:28:43,755:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:28:43,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:28:43,757:INFO:setup() successfully completed in 6.83s...............
2024-05-21 13:28:55,191:INFO:Initializing create_model()
2024-05-21 13:28:55,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1773ef0d0>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 13:28:55,191:INFO:Checking exceptions
2024-05-21 13:28:55,201:INFO:Importing libraries
2024-05-21 13:28:55,201:INFO:Copying training dataset
2024-05-21 13:28:56,249:INFO:Defining folds
2024-05-21 13:28:56,250:INFO:Declaring metric variables
2024-05-21 13:28:56,251:INFO:Importing untrained model
2024-05-21 13:28:56,251:INFO:Declaring custom model
2024-05-21 13:28:56,253:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:28:56,256:INFO:Starting cross validation
2024-05-21 13:28:56,263:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:29:31,068:INFO:Calculating mean and std
2024-05-21 13:29:31,071:INFO:Creating metrics dataframe
2024-05-21 13:29:31,077:INFO:Finalizing model
2024-05-21 13:29:37,717:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/joblib/externals/loky/process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2024-05-21 13:29:40,691:INFO:Uploading results into container
2024-05-21 13:29:40,692:INFO:Uploading model into container now
2024-05-21 13:29:40,698:INFO:_master_model_container: 1
2024-05-21 13:29:40,698:INFO:_display_container: 2
2024-05-21 13:29:40,698:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:29:40,698:INFO:create_model() successfully completed......................................
2024-05-21 13:29:40,810:INFO:Initializing tune_model()
2024-05-21 13:29:40,810:INFO:tune_model(estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, n_iter=10, custom_grid={'n_voters': [4, 6, 8, 10, 12, 14, 16], 'boosting_type': ['gbdt', 'dart'], 'learning_rate': [0.1, 0.3, 0.5]}, optimize=BA, custom_scorer=None, search_library=optuna, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x1773ef0d0>)
2024-05-21 13:29:40,810:INFO:Checking exceptions
2024-05-21 13:29:40,810:INFO:Soft dependency imported: optuna: 3.6.1
2024-05-21 13:29:41,360:INFO:Copying training dataset
2024-05-21 13:29:41,952:INFO:Checking base model
2024-05-21 13:29:41,952:INFO:A custom model has been passed
2024-05-21 13:29:41,952:INFO:Base model : VotingEnsembleLGBM
2024-05-21 13:29:41,954:INFO:Declaring metric variables
2024-05-21 13:29:41,955:INFO:Defining Hyperparameters
2024-05-21 13:29:42,034:INFO:custom_grid: {'actual_estimator__n_voters': CategoricalDistribution(values=[4, 6, 8, 10, 12, 14, 16]), 'actual_estimator__boosting_type': CategoricalDistribution(values=['gbdt', 'dart']), 'actual_estimator__learning_rate': CategoricalDistribution(values=[0.1, 0.3, 0.5])}
2024-05-21 13:29:42,034:INFO:Tuning with n_jobs=-1
2024-05-21 13:29:42,035:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna/samplers/_tpe/sampler.py:319: ExperimentalWarning: ``multivariate`` option is an experimental feature. The interface can change in the future.
  warnings.warn(

2024-05-21 13:29:42,035:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna/samplers/_tpe/sampler.py:338: ExperimentalWarning: ``constant_liar`` option is an experimental feature. The interface can change in the future.
  warnings.warn(

2024-05-21 13:29:42,035:INFO:Initializing optuna.integration.OptunaSearchCV
2024-05-21 13:29:42,040:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:2458: ExperimentalWarning: OptunaSearchCV is experimental (supported from v0.17.0). The interface can change in the future.
  model_grid = optuna.integration.OptunaSearchCV(  # type: ignore

2024-05-21 13:33:20,785:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(balanced_accuracy_score, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/sklearn/utils/_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 330, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/HELPpy/models/prediction.py", line 153, in predict
    probabilities = np.array([self.estimators_[i].predict_proba(X) for i in range(self.n_voters)])
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/HELPpy/models/prediction.py", line 153, in <listcomp>
    probabilities = np.array([self.estimators_[i].predict_proba(X) for i in range(self.n_voters)])
IndexError: list index out of range

  warnings.warn(

2024-05-21 13:33:58,433:INFO:best_params: {'actual_estimator__n_voters': 10, 'actual_estimator__boosting_type': 'dart', 'actual_estimator__learning_rate': 0.1}
2024-05-21 13:33:58,434:WARNING:Couldn't get cv_results from model_grid. Exception:
2024-05-21 13:33:58,434:WARNING:Traceback (most recent call last):
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 2693, in tune_model
    cv_results = model_grid.cv_results_
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna_integration/sklearn.py", line 598, in cv_results_
    cv_results_list_in_dict = {
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna_integration/sklearn.py", line 599, in <dictcomp>
    key: [dict_[key] for dict_ in cv_results_dict_in_list]
  File "/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna_integration/sklearn.py", line 599, in <listcomp>
    key: [dict_[key] for dict_ in cv_results_dict_in_list]
KeyError: 'mean_fit_time'

2024-05-21 13:33:58,435:INFO:Hyperparameter search completed
2024-05-21 13:33:58,435:INFO:SubProcess create_model() called ==================================
2024-05-21 13:33:58,436:INFO:Initializing create_model()
2024-05-21 13:33:58,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1773ef0d0>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.3, n_jobs=-1,
                   n_voters=8, random_state=42, verbose=False, voting='soft'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17791a4a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_voters': 10, 'boosting_type': 'dart', 'learning_rate': 0.1})
2024-05-21 13:33:58,436:INFO:Checking exceptions
2024-05-21 13:33:58,436:INFO:Importing libraries
2024-05-21 13:33:58,436:INFO:Copying training dataset
2024-05-21 13:33:59,411:INFO:Defining folds
2024-05-21 13:33:59,411:INFO:Declaring metric variables
2024-05-21 13:33:59,413:INFO:Importing untrained model
2024-05-21 13:33:59,413:INFO:Declaring custom model
2024-05-21 13:33:59,415:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:33:59,418:INFO:Starting cross validation
2024-05-21 13:33:59,424:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:34:34,693:INFO:Calculating mean and std
2024-05-21 13:34:34,695:INFO:Creating metrics dataframe
2024-05-21 13:34:34,702:INFO:Finalizing model
2024-05-21 13:34:43,844:INFO:Uploading results into container
2024-05-21 13:34:43,845:INFO:Uploading model into container now
2024-05-21 13:34:43,846:INFO:_master_model_container: 2
2024-05-21 13:34:43,846:INFO:_display_container: 3
2024-05-21 13:34:43,846:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:34:43,846:INFO:create_model() successfully completed......................................
2024-05-21 13:34:43,937:INFO:SubProcess create_model() end ==================================
2024-05-21 13:34:43,937:INFO:choose_better activated
2024-05-21 13:34:43,939:INFO:SubProcess create_model() called ==================================
2024-05-21 13:34:43,939:INFO:Initializing create_model()
2024-05-21 13:34:43,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1773ef0d0>, estimator=VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 13:34:43,939:INFO:Checking exceptions
2024-05-21 13:34:43,940:INFO:Importing libraries
2024-05-21 13:34:43,940:INFO:Copying training dataset
2024-05-21 13:34:44,896:INFO:Defining folds
2024-05-21 13:34:44,896:INFO:Declaring metric variables
2024-05-21 13:34:44,896:INFO:Importing untrained model
2024-05-21 13:34:44,896:INFO:Declaring custom model
2024-05-21 13:34:44,896:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:34:44,896:INFO:Starting cross validation
2024-05-21 13:34:44,902:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:35:19,708:INFO:Calculating mean and std
2024-05-21 13:35:19,710:INFO:Creating metrics dataframe
2024-05-21 13:35:19,713:INFO:Finalizing model
2024-05-21 13:35:28,821:INFO:Uploading results into container
2024-05-21 13:35:28,823:INFO:Uploading model into container now
2024-05-21 13:35:28,823:INFO:_master_model_container: 3
2024-05-21 13:35:28,823:INFO:_display_container: 4
2024-05-21 13:35:28,823:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:35:28,823:INFO:create_model() successfully completed......................................
2024-05-21 13:35:28,923:INFO:SubProcess create_model() end ==================================
2024-05-21 13:35:28,923:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') result for BA is 0.8817
2024-05-21 13:35:28,923:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') result for BA is 0.8817
2024-05-21 13:35:28,923:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft') is best model
2024-05-21 13:35:28,923:INFO:choose_better completed
2024-05-21 13:35:28,928:INFO:_master_model_container: 3
2024-05-21 13:35:28,928:INFO:_display_container: 3
2024-05-21 13:35:28,928:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:35:28,928:INFO:tune_model() successfully completed......................................
2024-05-21 13:43:18,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 13:43:18,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 13:43:18,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 13:43:18,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-21 13:43:23,733:INFO:PyCaret ClassificationExperiment
2024-05-21 13:43:23,733:INFO:Logging name: clf-default-name
2024-05-21 13:43:23,733:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-21 13:43:23,733:INFO:version 3.3.2
2024-05-21 13:43:23,733:INFO:Initializing setup()
2024-05-21 13:43:23,733:INFO:self.USI: 97b6
2024-05-21 13:43:23,733:INFO:self._variable_keys: {'fold_shuffle_param', '_ml_usecase', 'USI', 'X', 'data', 'n_jobs_param', 'pipeline', '_available_plots', 'X_train', 'fix_imbalance', 'log_plots_param', 'seed', 'fold_generator', 'logging_param', 'memory', 'idx', 'exp_name_log', 'fold_groups_param', 'target_param', 'y_train', 'X_test', 'html_param', 'gpu_param', 'y', 'exp_id', 'is_multiclass', 'y_test', 'gpu_n_jobs_param'}
2024-05-21 13:43:23,733:INFO:Checking environment
2024-05-21 13:43:23,733:INFO:python_version: 3.10.13
2024-05-21 13:43:23,733:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-21 13:43:23,733:INFO:machine: arm64
2024-05-21 13:43:23,733:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-21 13:43:23,733:INFO:Memory: svmem(total=17179869184, available=6260539392, percent=63.6, used=7302856704, free=970670080, active=5343313920, inactive=5274746880, wired=1959542784)
2024-05-21 13:43:23,733:INFO:Physical Core: 8
2024-05-21 13:43:23,733:INFO:Logical Core: 8
2024-05-21 13:43:23,733:INFO:Checking libraries
2024-05-21 13:43:23,734:INFO:System:
2024-05-21 13:43:23,734:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-21 13:43:23,734:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-21 13:43:23,734:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-21 13:43:23,734:INFO:PyCaret required dependencies:
2024-05-21 13:43:23,734:INFO:                 pip: 23.3.2
2024-05-21 13:43:23,734:INFO:          setuptools: 69.0.3
2024-05-21 13:43:23,734:INFO:             pycaret: 3.3.2
2024-05-21 13:43:23,734:INFO:             IPython: 8.20.0
2024-05-21 13:43:23,734:INFO:          ipywidgets: 8.1.1
2024-05-21 13:43:23,734:INFO:                tqdm: 4.66.1
2024-05-21 13:43:23,734:INFO:               numpy: 1.26.4
2024-05-21 13:43:23,734:INFO:              pandas: 2.1.3
2024-05-21 13:43:23,734:INFO:              jinja2: 3.1.3
2024-05-21 13:43:23,734:INFO:               scipy: 1.10.1
2024-05-21 13:43:23,734:INFO:              joblib: 1.3.2
2024-05-21 13:43:23,734:INFO:             sklearn: 1.4.2
2024-05-21 13:43:23,734:INFO:                pyod: 1.1.3
2024-05-21 13:43:23,735:INFO:            imblearn: 0.12.2
2024-05-21 13:43:23,735:INFO:   category_encoders: 2.6.3
2024-05-21 13:43:23,735:INFO:            lightgbm: 3.3.5
2024-05-21 13:43:23,735:INFO:               numba: 0.59.1
2024-05-21 13:43:23,735:INFO:            requests: 2.31.0
2024-05-21 13:43:23,735:INFO:          matplotlib: 3.6.0
2024-05-21 13:43:23,735:INFO:          scikitplot: 0.3.7
2024-05-21 13:43:23,735:INFO:         yellowbrick: 1.5
2024-05-21 13:43:23,735:INFO:              plotly: 5.18.0
2024-05-21 13:43:23,735:INFO:    plotly-resampler: Not installed
2024-05-21 13:43:23,735:INFO:             kaleido: 0.2.1
2024-05-21 13:43:23,735:INFO:           schemdraw: 0.15
2024-05-21 13:43:23,735:INFO:         statsmodels: 0.14.1
2024-05-21 13:43:23,735:INFO:              sktime: 0.26.0
2024-05-21 13:43:23,735:INFO:               tbats: 1.1.3
2024-05-21 13:43:23,735:INFO:            pmdarima: 2.0.4
2024-05-21 13:43:23,735:INFO:              psutil: 5.9.4
2024-05-21 13:43:23,735:INFO:          markupsafe: 2.1.3
2024-05-21 13:43:23,735:INFO:             pickle5: Not installed
2024-05-21 13:43:23,735:INFO:         cloudpickle: 2.2.1
2024-05-21 13:43:23,735:INFO:         deprecation: 2.1.0
2024-05-21 13:43:23,735:INFO:              xxhash: 3.4.1
2024-05-21 13:43:23,735:INFO:           wurlitzer: 3.1.0
2024-05-21 13:43:23,735:INFO:PyCaret optional dependencies:
2024-05-21 13:43:23,740:INFO:                shap: Not installed
2024-05-21 13:43:23,740:INFO:           interpret: Not installed
2024-05-21 13:43:23,740:INFO:                umap: Not installed
2024-05-21 13:43:23,740:INFO:     ydata_profiling: Not installed
2024-05-21 13:43:23,740:INFO:  explainerdashboard: Not installed
2024-05-21 13:43:23,740:INFO:             autoviz: Not installed
2024-05-21 13:43:23,740:INFO:           fairlearn: Not installed
2024-05-21 13:43:23,740:INFO:          deepchecks: Not installed
2024-05-21 13:43:23,740:INFO:             xgboost: 1.7.1
2024-05-21 13:43:23,740:INFO:            catboost: Not installed
2024-05-21 13:43:23,740:INFO:              kmodes: Not installed
2024-05-21 13:43:23,740:INFO:             mlxtend: Not installed
2024-05-21 13:43:23,740:INFO:       statsforecast: Not installed
2024-05-21 13:43:23,740:INFO:        tune_sklearn: Not installed
2024-05-21 13:43:23,740:INFO:                 ray: Not installed
2024-05-21 13:43:23,740:INFO:            hyperopt: Not installed
2024-05-21 13:43:23,740:INFO:              optuna: 3.6.1
2024-05-21 13:43:23,740:INFO:               skopt: Not installed
2024-05-21 13:43:23,740:INFO:              mlflow: Not installed
2024-05-21 13:43:23,740:INFO:              gradio: Not installed
2024-05-21 13:43:23,740:INFO:             fastapi: Not installed
2024-05-21 13:43:23,740:INFO:             uvicorn: Not installed
2024-05-21 13:43:23,740:INFO:              m2cgen: Not installed
2024-05-21 13:43:23,740:INFO:           evidently: Not installed
2024-05-21 13:43:23,740:INFO:               fugue: Not installed
2024-05-21 13:43:23,740:INFO:           streamlit: Not installed
2024-05-21 13:43:23,740:INFO:             prophet: Not installed
2024-05-21 13:43:23,740:INFO:None
2024-05-21 13:43:23,740:INFO:Set up data.
2024-05-21 13:43:24,366:INFO:Set up folding strategy.
2024-05-21 13:43:24,366:INFO:Set up train/test split.
2024-05-21 13:43:25,212:INFO:Set up index.
2024-05-21 13:43:25,237:INFO:Assigning column types.
2024-05-21 13:43:25,937:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-21 13:43:25,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 13:43:25,975:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:43:26,001:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:43:26,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:43:26,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-21 13:43:26,291:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:43:26,302:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:43:26,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:43:26,303:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-21 13:43:26,320:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:43:26,331:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:43:26,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:43:26,350:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-21 13:43:26,360:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:43:26,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:43:26,362:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-21 13:43:26,390:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:43:26,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:43:26,419:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:43:26,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:43:26,421:INFO:Preparing preprocessing pipeline...
2024-05-21 13:43:26,497:INFO:Set up simple imputation.
2024-05-21 13:43:26,570:INFO:Set up column name cleaning.
2024-05-21 13:43:27,798:INFO:Finished creating preprocessing pipeline.
2024-05-21 13:43:27,815:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-21 13:43:27,815:INFO:Creating final display dataframe.
2024-05-21 13:43:31,153:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape     (12927, 3460)
4        Transformed data shape     (12927, 3460)
5   Transformed train set shape      (9048, 3460)
6    Transformed test set shape      (3879, 3460)
7              Numeric features              3459
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              97b6
2024-05-21 13:43:31,185:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:43:31,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:43:31,216:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-21 13:43:31,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-21 13:43:31,218:INFO:setup() successfully completed in 7.49s...............
2024-05-21 13:43:47,358:INFO:Initializing create_model()
2024-05-21 13:43:47,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x168f2f190>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 13:43:47,359:INFO:Checking exceptions
2024-05-21 13:43:47,366:INFO:Importing libraries
2024-05-21 13:43:47,366:INFO:Copying training dataset
2024-05-21 13:43:48,308:INFO:Defining folds
2024-05-21 13:43:48,308:INFO:Declaring metric variables
2024-05-21 13:43:48,310:INFO:Importing untrained model
2024-05-21 13:43:48,310:INFO:Declaring custom model
2024-05-21 13:43:48,312:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:43:48,314:INFO:Starting cross validation
2024-05-21 13:43:48,321:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:44:24,113:INFO:Calculating mean and std
2024-05-21 13:44:24,117:INFO:Creating metrics dataframe
2024-05-21 13:44:24,124:INFO:Finalizing model
2024-05-21 13:44:33,623:INFO:Uploading results into container
2024-05-21 13:44:33,625:INFO:Uploading model into container now
2024-05-21 13:44:33,631:INFO:_master_model_container: 1
2024-05-21 13:44:33,631:INFO:_display_container: 2
2024-05-21 13:44:33,631:INFO:VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft')
2024-05-21 13:44:33,631:INFO:create_model() successfully completed......................................
2024-05-21 13:44:33,709:INFO:Initializing tune_model()
2024-05-21 13:44:33,709:INFO:tune_model(estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, n_iter=10, custom_grid={'n_voters': [4, 6, 8, 10, 12, 14, 16], 'boosting_type': ['gbdt', 'dart'], 'learning_rate': [0.1, 0.3, 0.5]}, optimize=BA, custom_scorer=None, search_library=optuna, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=True, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x168f2f190>)
2024-05-21 13:44:33,709:INFO:Checking exceptions
2024-05-21 13:44:33,709:INFO:Soft dependency imported: optuna: 3.6.1
2024-05-21 13:44:34,316:INFO:Copying training dataset
2024-05-21 13:44:34,920:INFO:Checking base model
2024-05-21 13:44:34,920:INFO:A custom model has been passed
2024-05-21 13:44:34,920:INFO:Base model : VotingEnsembleLGBM
2024-05-21 13:44:34,922:INFO:Declaring metric variables
2024-05-21 13:44:34,923:INFO:Defining Hyperparameters
2024-05-21 13:44:34,979:INFO:custom_grid: {'actual_estimator__n_voters': CategoricalDistribution(values=[4, 6, 8, 10, 12, 14, 16]), 'actual_estimator__boosting_type': CategoricalDistribution(values=['gbdt', 'dart']), 'actual_estimator__learning_rate': CategoricalDistribution(values=[0.1, 0.3, 0.5])}
2024-05-21 13:44:34,979:INFO:Tuning with n_jobs=-1
2024-05-21 13:44:34,981:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna/samplers/_tpe/sampler.py:319: ExperimentalWarning: ``multivariate`` option is an experimental feature. The interface can change in the future.
  warnings.warn(

2024-05-21 13:44:34,981:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/optuna/samplers/_tpe/sampler.py:338: ExperimentalWarning: ``constant_liar`` option is an experimental feature. The interface can change in the future.
  warnings.warn(

2024-05-21 13:44:34,981:INFO:Initializing optuna.integration.OptunaSearchCV
2024-05-21 13:44:34,986:WARNING:/Users/maurizio/miniconda3/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:2458: ExperimentalWarning: OptunaSearchCV is experimental (supported from v0.17.0). The interface can change in the future.
  model_grid = optuna.integration.OptunaSearchCV(  # type: ignore

2024-05-21 13:50:51,766:INFO:best_params: {'actual_estimator__n_voters': 12, 'actual_estimator__boosting_type': 'dart', 'actual_estimator__learning_rate': 0.3}
2024-05-21 13:50:51,769:INFO:Hyperparameter search completed
2024-05-21 13:50:51,769:INFO:SubProcess create_model() called ==================================
2024-05-21 13:50:51,769:INFO:Initializing create_model()
2024-05-21 13:50:51,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x168f2f190>, estimator=VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.1, n_jobs=-1,
                   n_voters=12, random_state=42, verbose=False, voting='soft'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16a043e80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_voters': 12, 'boosting_type': 'dart', 'learning_rate': 0.3})
2024-05-21 13:50:51,769:INFO:Checking exceptions
2024-05-21 13:50:51,769:INFO:Importing libraries
2024-05-21 13:50:51,769:INFO:Copying training dataset
2024-05-21 13:50:52,801:INFO:Defining folds
2024-05-21 13:50:52,802:INFO:Declaring metric variables
2024-05-21 13:50:52,803:INFO:Importing untrained model
2024-05-21 13:50:52,803:INFO:Declaring custom model
2024-05-21 13:50:52,805:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:50:52,808:INFO:Starting cross validation
2024-05-21 13:50:52,814:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:51:31,630:INFO:Calculating mean and std
2024-05-21 13:51:31,632:INFO:Creating metrics dataframe
2024-05-21 13:51:31,640:INFO:Finalizing model
2024-05-21 13:51:41,439:INFO:Uploading results into container
2024-05-21 13:51:41,440:INFO:Uploading model into container now
2024-05-21 13:51:41,441:INFO:_master_model_container: 2
2024-05-21 13:51:41,441:INFO:_display_container: 3
2024-05-21 13:51:41,441:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.3, n_jobs=-1,
                   n_voters=12, random_state=42, verbose=False, voting='soft')
2024-05-21 13:51:41,441:INFO:create_model() successfully completed......................................
2024-05-21 13:51:41,517:INFO:SubProcess create_model() end ==================================
2024-05-21 13:51:41,517:INFO:choose_better activated
2024-05-21 13:51:41,519:INFO:SubProcess create_model() called ==================================
2024-05-21 13:51:41,519:INFO:Initializing create_model()
2024-05-21 13:51:41,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x168f2f190>, estimator=VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.3, n_jobs=-1,
                   n_voters=12, random_state=42, verbose=False, voting='soft'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-21 13:51:41,519:INFO:Checking exceptions
2024-05-21 13:51:41,520:INFO:Importing libraries
2024-05-21 13:51:41,520:INFO:Copying training dataset
2024-05-21 13:51:42,488:INFO:Defining folds
2024-05-21 13:51:42,488:INFO:Declaring metric variables
2024-05-21 13:51:42,488:INFO:Importing untrained model
2024-05-21 13:51:42,488:INFO:Declaring custom model
2024-05-21 13:51:42,489:INFO:VotingEnsembleLGBM Imported successfully
2024-05-21 13:51:42,489:INFO:Starting cross validation
2024-05-21 13:51:42,496:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-21 13:52:22,038:INFO:Calculating mean and std
2024-05-21 13:52:22,039:INFO:Creating metrics dataframe
2024-05-21 13:52:22,042:INFO:Finalizing model
2024-05-21 13:52:31,755:INFO:Uploading results into container
2024-05-21 13:52:31,757:INFO:Uploading model into container now
2024-05-21 13:52:31,757:INFO:_master_model_container: 3
2024-05-21 13:52:31,757:INFO:_display_container: 4
2024-05-21 13:52:31,758:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.3, n_jobs=-1,
                   n_voters=12, random_state=42, verbose=False, voting='soft')
2024-05-21 13:52:31,758:INFO:create_model() successfully completed......................................
2024-05-21 13:52:31,844:INFO:SubProcess create_model() end ==================================
2024-05-21 13:52:31,845:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.3, n_jobs=-1,
                   n_voters=12, random_state=42, verbose=False, voting='soft') result for BA is 0.8815
2024-05-21 13:52:31,845:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.3, n_jobs=-1,
                   n_voters=12, random_state=42, verbose=False, voting='soft') result for BA is 0.8815
2024-05-21 13:52:31,845:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.3, n_jobs=-1,
                   n_voters=12, random_state=42, verbose=False, voting='soft') is best model
2024-05-21 13:52:31,845:INFO:choose_better completed
2024-05-21 13:52:31,849:INFO:_master_model_container: 3
2024-05-21 13:52:31,849:INFO:_display_container: 3
2024-05-21 13:52:31,849:INFO:VotingEnsembleLGBM(boosting_type='dart', learning_rate=0.3, n_jobs=-1,
                   n_voters=12, random_state=42, verbose=False, voting='soft')
2024-05-21 13:52:31,849:INFO:tune_model() successfully completed......................................
2024-05-22 12:38:43,530:INFO:PyCaret ClassificationExperiment
2024-05-22 12:38:43,530:INFO:Logging name: clf-default-name
2024-05-22 12:38:43,530:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-22 12:38:43,530:INFO:version 3.3.2
2024-05-22 12:38:43,530:INFO:Initializing setup()
2024-05-22 12:38:43,530:INFO:self.USI: b50d
2024-05-22 12:38:43,530:INFO:self._variable_keys: {'y', 'exp_name_log', 'idx', 'fix_imbalance', 'gpu_param', 'target_param', 'memory', 'y_test', 'fold_shuffle_param', 'y_train', 'log_plots_param', 'logging_param', 'data', 'is_multiclass', 'seed', '_ml_usecase', 'fold_generator', 'exp_id', 'USI', '_available_plots', 'X_test', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'X', 'pipeline', 'html_param', 'fold_groups_param'}
2024-05-22 12:38:43,530:INFO:Checking environment
2024-05-22 12:38:43,530:INFO:python_version: 3.10.13
2024-05-22 12:38:43,530:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-22 12:38:43,530:INFO:machine: arm64
2024-05-22 12:38:43,530:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-22 12:38:43,530:INFO:Memory: svmem(total=17179869184, available=5301092352, percent=69.1, used=7201259520, free=78856192, active=5233475584, inactive=5207965696, wired=1967783936)
2024-05-22 12:38:43,530:INFO:Physical Core: 8
2024-05-22 12:38:43,530:INFO:Logical Core: 8
2024-05-22 12:38:43,530:INFO:Checking libraries
2024-05-22 12:38:43,530:INFO:System:
2024-05-22 12:38:43,530:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-22 12:38:43,530:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-22 12:38:43,530:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-22 12:38:43,530:INFO:PyCaret required dependencies:
2024-05-22 12:38:43,531:INFO:                 pip: 23.3.2
2024-05-22 12:38:43,531:INFO:          setuptools: 69.0.3
2024-05-22 12:38:43,531:INFO:             pycaret: 3.3.2
2024-05-22 12:38:43,531:INFO:             IPython: 8.20.0
2024-05-22 12:38:43,531:INFO:          ipywidgets: 8.1.1
2024-05-22 12:38:43,531:INFO:                tqdm: 4.66.1
2024-05-22 12:38:43,531:INFO:               numpy: 1.26.4
2024-05-22 12:38:43,531:INFO:              pandas: 2.1.3
2024-05-22 12:38:43,531:INFO:              jinja2: 3.1.3
2024-05-22 12:38:43,531:INFO:               scipy: 1.10.1
2024-05-22 12:38:43,531:INFO:              joblib: 1.3.2
2024-05-22 12:38:43,531:INFO:             sklearn: 1.4.2
2024-05-22 12:38:43,531:INFO:                pyod: 1.1.3
2024-05-22 12:38:43,531:INFO:            imblearn: 0.12.2
2024-05-22 12:38:43,531:INFO:   category_encoders: 2.6.3
2024-05-22 12:38:43,531:INFO:            lightgbm: 3.3.5
2024-05-22 12:38:43,531:INFO:               numba: 0.59.1
2024-05-22 12:38:43,531:INFO:            requests: 2.31.0
2024-05-22 12:38:43,531:INFO:          matplotlib: 3.6.0
2024-05-22 12:38:43,531:INFO:          scikitplot: 0.3.7
2024-05-22 12:38:43,531:INFO:         yellowbrick: 1.5
2024-05-22 12:38:43,531:INFO:              plotly: 5.18.0
2024-05-22 12:38:43,531:INFO:    plotly-resampler: Not installed
2024-05-22 12:38:43,531:INFO:             kaleido: 0.2.1
2024-05-22 12:38:43,531:INFO:           schemdraw: 0.15
2024-05-22 12:38:43,531:INFO:         statsmodels: 0.14.1
2024-05-22 12:38:43,531:INFO:              sktime: 0.26.0
2024-05-22 12:38:43,531:INFO:               tbats: 1.1.3
2024-05-22 12:38:43,531:INFO:            pmdarima: 2.0.4
2024-05-22 12:38:43,531:INFO:              psutil: 5.9.4
2024-05-22 12:38:43,531:INFO:          markupsafe: 2.1.3
2024-05-22 12:38:43,531:INFO:             pickle5: Not installed
2024-05-22 12:38:43,531:INFO:         cloudpickle: 2.2.1
2024-05-22 12:38:43,531:INFO:         deprecation: 2.1.0
2024-05-22 12:38:43,531:INFO:              xxhash: 3.4.1
2024-05-22 12:38:43,531:INFO:           wurlitzer: 3.1.0
2024-05-22 12:38:43,531:INFO:PyCaret optional dependencies:
2024-05-22 12:38:43,531:INFO:                shap: Not installed
2024-05-22 12:38:43,531:INFO:           interpret: Not installed
2024-05-22 12:38:43,531:INFO:                umap: Not installed
2024-05-22 12:38:43,531:INFO:     ydata_profiling: Not installed
2024-05-22 12:38:43,531:INFO:  explainerdashboard: Not installed
2024-05-22 12:38:43,531:INFO:             autoviz: Not installed
2024-05-22 12:38:43,531:INFO:           fairlearn: Not installed
2024-05-22 12:38:43,531:INFO:          deepchecks: Not installed
2024-05-22 12:38:43,531:INFO:             xgboost: 1.7.1
2024-05-22 12:38:43,531:INFO:            catboost: Not installed
2024-05-22 12:38:43,531:INFO:              kmodes: Not installed
2024-05-22 12:38:43,531:INFO:             mlxtend: Not installed
2024-05-22 12:38:43,531:INFO:       statsforecast: Not installed
2024-05-22 12:38:43,532:INFO:        tune_sklearn: Not installed
2024-05-22 12:38:43,532:INFO:                 ray: Not installed
2024-05-22 12:38:43,532:INFO:            hyperopt: Not installed
2024-05-22 12:38:43,532:INFO:              optuna: Not installed
2024-05-22 12:38:43,532:INFO:               skopt: Not installed
2024-05-22 12:38:43,532:INFO:              mlflow: Not installed
2024-05-22 12:38:43,532:INFO:              gradio: Not installed
2024-05-22 12:38:43,532:INFO:             fastapi: Not installed
2024-05-22 12:38:43,532:INFO:             uvicorn: Not installed
2024-05-22 12:38:43,532:INFO:              m2cgen: Not installed
2024-05-22 12:38:43,532:INFO:           evidently: Not installed
2024-05-22 12:38:43,532:INFO:               fugue: Not installed
2024-05-22 12:38:43,532:INFO:           streamlit: Not installed
2024-05-22 12:38:43,532:INFO:             prophet: Not installed
2024-05-22 12:38:43,532:INFO:None
2024-05-22 12:38:43,532:INFO:Set up data.
2024-05-22 12:38:43,561:INFO:Set up folding strategy.
2024-05-22 12:38:43,561:INFO:Set up train/test split.
2024-05-22 12:38:43,589:INFO:Set up index.
2024-05-22 12:38:43,591:INFO:Assigning column types.
2024-05-22 12:38:43,616:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-22 12:38:43,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-22 12:38:43,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-22 12:38:43,645:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:38:43,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:38:43,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-22 12:38:43,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-22 12:38:43,677:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:38:43,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:38:43,679:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-22 12:38:43,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-22 12:38:43,707:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:38:43,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:38:43,725:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-22 12:38:43,736:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:38:43,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:38:43,737:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-22 12:38:43,766:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:38:43,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:38:43,795:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:38:43,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:38:43,797:INFO:Preparing preprocessing pipeline...
2024-05-22 12:38:43,801:INFO:Set up simple imputation.
2024-05-22 12:38:43,805:INFO:Set up column name cleaning.
2024-05-22 12:38:43,892:INFO:Finished creating preprocessing pipeline.
2024-05-22 12:38:43,895:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-22 12:38:43,895:INFO:Creating final display dataframe.
2024-05-22 12:38:44,169:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape      (12927, 155)
4        Transformed data shape      (12927, 155)
5   Transformed train set shape       (9048, 155)
6    Transformed test set shape       (3879, 155)
7              Numeric features               154
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              b50d
2024-05-22 12:38:44,201:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:38:44,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:38:44,232:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:38:44,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:38:44,234:INFO:setup() successfully completed in 0.71s...............
2024-05-22 12:40:10,038:INFO:Initializing create_model()
2024-05-22 12:40:10,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x301822170>, estimator=VotingEnsembleLGBM(boosting_type='gbdt', learning_rate=0.1, n_jobs=-1,
                   n_voters=10, random_state=42, verbose=False, voting='soft'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-22 12:40:10,039:INFO:Checking exceptions
2024-05-22 12:40:10,048:INFO:Importing libraries
2024-05-22 12:40:10,048:INFO:Copying training dataset
2024-05-22 12:40:10,095:INFO:Defining folds
2024-05-22 12:40:10,095:INFO:Declaring metric variables
2024-05-22 12:40:10,097:INFO:Importing untrained model
2024-05-22 12:40:10,097:INFO:Declaring custom model
2024-05-22 12:40:10,099:INFO:VotingEnsembleLGBM Imported successfully
2024-05-22 12:40:10,102:INFO:Starting cross validation
2024-05-22 12:40:10,102:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-05-22 12:41:30,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-22 12:41:30,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-22 12:41:30,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-22 12:41:30,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-22 12:41:36,466:INFO:PyCaret ClassificationExperiment
2024-05-22 12:41:36,466:INFO:Logging name: clf-default-name
2024-05-22 12:41:36,466:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-22 12:41:36,466:INFO:version 3.3.2
2024-05-22 12:41:36,466:INFO:Initializing setup()
2024-05-22 12:41:36,466:INFO:self.USI: 4b60
2024-05-22 12:41:36,466:INFO:self._variable_keys: {'gpu_n_jobs_param', 'log_plots_param', 'is_multiclass', 'exp_id', 'fold_shuffle_param', 'y_train', 'X_train', 'X', 'fold_groups_param', 'pipeline', 'n_jobs_param', 'X_test', 'html_param', 'gpu_param', 'fold_generator', 'USI', 'data', 'y', 'fix_imbalance', '_ml_usecase', '_available_plots', 'exp_name_log', 'target_param', 'logging_param', 'memory', 'idx', 'y_test', 'seed'}
2024-05-22 12:41:36,466:INFO:Checking environment
2024-05-22 12:41:36,466:INFO:python_version: 3.10.13
2024-05-22 12:41:36,466:INFO:python_build: ('main', 'Dec 23 2023 15:35:25')
2024-05-22 12:41:36,466:INFO:machine: arm64
2024-05-22 12:41:36,466:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-22 12:41:36,467:INFO:Memory: svmem(total=17179869184, available=5615599616, percent=67.3, used=6728417280, free=745668608, active=4562173952, inactive=4746362880, wired=2166243328)
2024-05-22 12:41:36,467:INFO:Physical Core: 8
2024-05-22 12:41:36,467:INFO:Logical Core: 8
2024-05-22 12:41:36,467:INFO:Checking libraries
2024-05-22 12:41:36,467:INFO:System:
2024-05-22 12:41:36,467:INFO:    python: 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:35:25) [Clang 16.0.6 ]
2024-05-22 12:41:36,467:INFO:executable: /Users/maurizio/miniconda3/bin/python
2024-05-22 12:41:36,467:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-22 12:41:36,467:INFO:PyCaret required dependencies:
2024-05-22 12:41:36,468:INFO:                 pip: 23.3.2
2024-05-22 12:41:36,468:INFO:          setuptools: 69.0.3
2024-05-22 12:41:36,468:INFO:             pycaret: 3.3.2
2024-05-22 12:41:36,468:INFO:             IPython: 8.20.0
2024-05-22 12:41:36,468:INFO:          ipywidgets: 8.1.1
2024-05-22 12:41:36,468:INFO:                tqdm: 4.66.1
2024-05-22 12:41:36,468:INFO:               numpy: 1.26.4
2024-05-22 12:41:36,468:INFO:              pandas: 2.1.3
2024-05-22 12:41:36,468:INFO:              jinja2: 3.1.3
2024-05-22 12:41:36,468:INFO:               scipy: 1.10.1
2024-05-22 12:41:36,468:INFO:              joblib: 1.3.2
2024-05-22 12:41:36,468:INFO:             sklearn: 1.4.2
2024-05-22 12:41:36,468:INFO:                pyod: 1.1.3
2024-05-22 12:41:36,468:INFO:            imblearn: 0.12.2
2024-05-22 12:41:36,468:INFO:   category_encoders: 2.6.3
2024-05-22 12:41:36,468:INFO:            lightgbm: 3.3.5
2024-05-22 12:41:36,468:INFO:               numba: 0.59.1
2024-05-22 12:41:36,468:INFO:            requests: 2.31.0
2024-05-22 12:41:36,468:INFO:          matplotlib: 3.6.0
2024-05-22 12:41:36,468:INFO:          scikitplot: 0.3.7
2024-05-22 12:41:36,468:INFO:         yellowbrick: 1.5
2024-05-22 12:41:36,468:INFO:              plotly: 5.18.0
2024-05-22 12:41:36,468:INFO:    plotly-resampler: Not installed
2024-05-22 12:41:36,468:INFO:             kaleido: 0.2.1
2024-05-22 12:41:36,468:INFO:           schemdraw: 0.15
2024-05-22 12:41:36,468:INFO:         statsmodels: 0.14.1
2024-05-22 12:41:36,468:INFO:              sktime: 0.26.0
2024-05-22 12:41:36,468:INFO:               tbats: 1.1.3
2024-05-22 12:41:36,468:INFO:            pmdarima: 2.0.4
2024-05-22 12:41:36,469:INFO:              psutil: 5.9.4
2024-05-22 12:41:36,469:INFO:          markupsafe: 2.1.3
2024-05-22 12:41:36,469:INFO:             pickle5: Not installed
2024-05-22 12:41:36,469:INFO:         cloudpickle: 2.2.1
2024-05-22 12:41:36,469:INFO:         deprecation: 2.1.0
2024-05-22 12:41:36,469:INFO:              xxhash: 3.4.1
2024-05-22 12:41:36,469:INFO:           wurlitzer: 3.1.0
2024-05-22 12:41:36,469:INFO:PyCaret optional dependencies:
2024-05-22 12:41:36,477:INFO:                shap: Not installed
2024-05-22 12:41:36,477:INFO:           interpret: Not installed
2024-05-22 12:41:36,477:INFO:                umap: Not installed
2024-05-22 12:41:36,477:INFO:     ydata_profiling: Not installed
2024-05-22 12:41:36,477:INFO:  explainerdashboard: Not installed
2024-05-22 12:41:36,477:INFO:             autoviz: Not installed
2024-05-22 12:41:36,477:INFO:           fairlearn: Not installed
2024-05-22 12:41:36,477:INFO:          deepchecks: Not installed
2024-05-22 12:41:36,477:INFO:             xgboost: 1.7.1
2024-05-22 12:41:36,477:INFO:            catboost: Not installed
2024-05-22 12:41:36,477:INFO:              kmodes: Not installed
2024-05-22 12:41:36,477:INFO:             mlxtend: Not installed
2024-05-22 12:41:36,477:INFO:       statsforecast: Not installed
2024-05-22 12:41:36,477:INFO:        tune_sklearn: Not installed
2024-05-22 12:41:36,477:INFO:                 ray: Not installed
2024-05-22 12:41:36,477:INFO:            hyperopt: Not installed
2024-05-22 12:41:36,477:INFO:              optuna: 3.6.1
2024-05-22 12:41:36,477:INFO:               skopt: Not installed
2024-05-22 12:41:36,477:INFO:              mlflow: Not installed
2024-05-22 12:41:36,477:INFO:              gradio: Not installed
2024-05-22 12:41:36,477:INFO:             fastapi: Not installed
2024-05-22 12:41:36,477:INFO:             uvicorn: Not installed
2024-05-22 12:41:36,478:INFO:              m2cgen: Not installed
2024-05-22 12:41:36,478:INFO:           evidently: Not installed
2024-05-22 12:41:36,478:INFO:               fugue: Not installed
2024-05-22 12:41:36,478:INFO:           streamlit: Not installed
2024-05-22 12:41:36,478:INFO:             prophet: Not installed
2024-05-22 12:41:36,478:INFO:None
2024-05-22 12:41:36,478:INFO:Set up data.
2024-05-22 12:41:36,499:INFO:Set up folding strategy.
2024-05-22 12:41:36,499:INFO:Set up train/test split.
2024-05-22 12:41:36,524:INFO:Set up index.
2024-05-22 12:41:36,525:INFO:Assigning column types.
2024-05-22 12:41:36,548:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-22 12:41:36,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-22 12:41:36,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-22 12:41:36,582:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:41:36,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:41:36,917:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-22 12:41:36,917:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-22 12:41:36,929:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:41:36,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:41:36,930:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-22 12:41:36,949:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-22 12:41:36,960:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:41:36,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:41:36,980:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-22 12:41:36,991:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:41:36,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:41:36,992:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-22 12:41:37,023:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:41:37,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:41:37,053:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:41:37,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:41:37,055:INFO:Preparing preprocessing pipeline...
2024-05-22 12:41:37,059:INFO:Set up simple imputation.
2024-05-22 12:41:37,063:INFO:Set up column name cleaning.
2024-05-22 12:41:37,160:INFO:Finished creating preprocessing pipeline.
2024-05-22 12:41:37,163:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gl/gkr8rrn52y9cvb9jc59pvjyw0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gene length', 'Transcripts count',
                                             'GC content', 'GTEX_kidney',
                                             'Gene-Disease association',
                                             'OncoDB_expression', 'HPA_kidney',
                                             'GO-MF', 'GO-BP', 'GO-CC',
                                             'BIOGRID', 'KEGG', 'REACTOME',
                                             'UCSC_TFBS', 'UP_tis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-05-22 12:41:37,163:INFO:Creating final display dataframe.
2024-05-22 12:41:37,456:INFO:Setup _display_container:                     Description             Value
0                    Session id               444
1                        Target             label
2                   Target type            Binary
3           Original data shape      (12927, 155)
4        Transformed data shape      (12927, 155)
5   Transformed train set shape       (9048, 155)
6    Transformed test set shape       (3879, 155)
7              Numeric features               154
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                 5
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4b60
2024-05-22 12:41:37,499:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:41:37,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:41:37,538:INFO:Soft dependency imported: xgboost: 1.7.1
2024-05-22 12:41:37,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-22 12:41:37,540:INFO:setup() successfully completed in 1.08s...............
